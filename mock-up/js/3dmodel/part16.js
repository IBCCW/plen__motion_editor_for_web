// name = lower arm l
// verticesNum = 96
// indicesNum = 188
// center = ( 45.250000, -27.000000, -7.300000 )
// length = ( 22.000000, 53.000000, 31.000000 ) 
function initPartsValues16() {
	var geometry = new THREE.Geometry();
	geometry.vertices.push(new THREE.Vector3(  38.2500,  -0.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3(  52.2500,  -0.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3(  38.2500,  -0.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3(  52.2500,  -0.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3(  38.2500,  -4.5000,   8.2000 ));
	geometry.vertices.push(new THREE.Vector3(  52.2500,  -4.5000,   8.2000 ));
	geometry.vertices.push(new THREE.Vector3(  38.2500, -49.5000,   8.2000 ));
	geometry.vertices.push(new THREE.Vector3(  51.3332, -49.5000,   8.2000 ));
	geometry.vertices.push(new THREE.Vector3(  38.2500, -53.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3(  48.1882, -53.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3(  38.2500, -53.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3(  48.1882, -53.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3(  38.2500, -49.5000, -22.8000 ));
	geometry.vertices.push(new THREE.Vector3(  51.3332, -49.5000, -22.8000 ));
	geometry.vertices.push(new THREE.Vector3(  38.2500,  -4.5000, -22.8000 ));
	geometry.vertices.push(new THREE.Vector3(  52.2500,  -4.5000, -22.8000 ));
	geometry.vertices.push(new THREE.Vector3(  56.2500,  -4.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3(  55.3332, -49.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3(  56.2500,  -4.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3(  55.3332, -49.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3(  34.2500, -49.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3(  34.2500,  -4.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3(  34.2500, -49.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3(  34.2500,  -4.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3(  38.2500,  -1.0359,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3(  52.2500,  -1.0359,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3(  38.2500,  -2.5000,   7.6641 ));
	geometry.vertices.push(new THREE.Vector3(  52.2500,  -2.5000,   7.6641 ));
	geometry.vertices.push(new THREE.Vector3(  38.2500, -52.9641,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3(  48.6096, -52.9641,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3(  38.2500, -51.5000,   7.6641 ));
	geometry.vertices.push(new THREE.Vector3(  49.7607, -51.5000,   7.6641 ));
	geometry.vertices.push(new THREE.Vector3(  38.2500,  -1.0359, -20.8000 ));
	geometry.vertices.push(new THREE.Vector3(  52.2500,  -1.0359, -20.8000 ));
	geometry.vertices.push(new THREE.Vector3(  38.2500,  -2.5000, -22.2641 ));
	geometry.vertices.push(new THREE.Vector3(  52.2500,  -2.5000, -22.2641 ));
	geometry.vertices.push(new THREE.Vector3(  38.2500, -52.9641, -20.8000 ));
	geometry.vertices.push(new THREE.Vector3(  48.6096, -52.9641, -20.8000 ));
	geometry.vertices.push(new THREE.Vector3(  38.2500, -51.5000, -22.2641 ));
	geometry.vertices.push(new THREE.Vector3(  49.7607, -51.5000, -22.2641 ));
	geometry.vertices.push(new THREE.Vector3(  54.2500,  -1.0359, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3(  54.2500,  -1.0359,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3(  55.7141,  -2.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3(  55.7141,  -2.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3(  50.6096, -52.9641, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3(  50.6096, -52.9641,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3(  53.2248, -51.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3(  53.2248, -51.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3(  36.2500,  -1.0359, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3(  36.2500,  -1.0359,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3(  34.7859,  -2.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3(  34.7859,  -2.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3(  36.2500, -52.9641, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3(  36.2500, -52.9641,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3(  34.7859, -51.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3(  34.7859, -51.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3(  53.3332, -49.5000,   7.6641 ));
	geometry.vertices.push(new THREE.Vector3(  54.2500,  -4.5000,   7.6641 ));
	geometry.vertices.push(new THREE.Vector3(  54.7973, -49.5000,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3(  55.7141,  -4.5000,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3(  53.3332, -49.5000, -22.2641 ));
	geometry.vertices.push(new THREE.Vector3(  54.2500,  -4.5000, -22.2641 ));
	geometry.vertices.push(new THREE.Vector3(  54.7973, -49.5000, -20.8000 ));
	geometry.vertices.push(new THREE.Vector3(  55.7141,  -4.5000, -20.8000 ));
	geometry.vertices.push(new THREE.Vector3(  36.2500, -49.5000,   7.6641 ));
	geometry.vertices.push(new THREE.Vector3(  36.2500,  -4.5000,   7.6641 ));
	geometry.vertices.push(new THREE.Vector3(  34.7859, -49.5000,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3(  34.7859,  -4.5000,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3(  36.2500, -49.5000, -22.2641 ));
	geometry.vertices.push(new THREE.Vector3(  36.2500,  -4.5000, -22.2641 ));
	geometry.vertices.push(new THREE.Vector3(  34.7859, -49.5000, -20.8000 ));
	geometry.vertices.push(new THREE.Vector3(  34.7859,  -4.5000, -20.8000 ));
	geometry.vertices.push(new THREE.Vector3(  54.6995,  -2.5000,   6.6495 ));
	geometry.vertices.push(new THREE.Vector3(  35.8005,  -2.5000,   6.6495 ));
	geometry.vertices.push(new THREE.Vector3(  52.2102, -51.5000,   6.6495 ));
	geometry.vertices.push(new THREE.Vector3(  54.6995,  -2.5000, -21.2495 ));
	geometry.vertices.push(new THREE.Vector3(  35.8005, -51.5000,   6.6495 ));
	geometry.vertices.push(new THREE.Vector3(  52.2102, -51.5000, -21.2495 ));
	geometry.vertices.push(new THREE.Vector3(  35.8005,  -2.5000, -21.2495 ));
	geometry.vertices.push(new THREE.Vector3(  35.8005, -51.5000, -21.2495 ));
	geometry.vertices.push(new THREE.Vector3(  52.2500, -46.3181,   8.2000 ));
	geometry.vertices.push(new THREE.Vector3(  38.2500, -46.3181,   8.2000 ));
	geometry.vertices.push(new THREE.Vector3(  54.2500, -46.3181,   7.6641 ));
	geometry.vertices.push(new THREE.Vector3(  36.2500, -46.3181,   7.6641 ));
	geometry.vertices.push(new THREE.Vector3(  55.7141, -46.3181,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3(  34.7859, -46.3181,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3(  56.2500, -46.3181,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3(  34.2500, -46.3181,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3(  56.2500, -46.3181, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3(  34.2500, -46.3181, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3(  55.7141, -46.3181, -20.8000 ));
	geometry.vertices.push(new THREE.Vector3(  34.7859, -46.3181, -20.8000 ));
	geometry.vertices.push(new THREE.Vector3(  54.2500, -46.3181, -22.2641 ));
	geometry.vertices.push(new THREE.Vector3(  36.2500, -46.3181, -22.2641 ));
	geometry.vertices.push(new THREE.Vector3(  52.2500, -46.3181, -22.8000 ));
	geometry.vertices.push(new THREE.Vector3(  38.2500, -46.3181, -22.8000 ));
	geometry.faces.push(new THREE.Face3(  25,   41,    3, new THREE.Vector3( 0.25, 0.94, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  72,   43,   41, new THREE.Vector3( 0.68, 0.68, 0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  41,   25,   72, new THREE.Vector3( 0.41, 0.81, 0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  27,   72,   25, new THREE.Vector3( 0.28, 0.68, 0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  59,   18,   43, new THREE.Vector3( 0.94, 0.25, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  43,   72,   59, new THREE.Vector3( 0.86, 0.36, 0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  57,   59,   72, new THREE.Vector3( 0.69, 0.20, 0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  72,   27,   57, new THREE.Vector3( 0.36, 0.36, 0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(   5,   57,   27, new THREE.Vector3( 0.25, 0.25, 0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(   2,   49,   24, new THREE.Vector3( -0.25, 0.94, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  49,   51,   73, new THREE.Vector3( -0.68, 0.68, 0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  73,   24,   49, new THREE.Vector3( -0.41, 0.81, 0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  24,   73,   26, new THREE.Vector3( -0.28, 0.68, 0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  51,   23,   67, new THREE.Vector3( -0.94, 0.25, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  67,   73,   51, new THREE.Vector3( -0.86, 0.36, 0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  73,   67,   65, new THREE.Vector3( -0.69, 0.20, 0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  65,   26,   73, new THREE.Vector3( -0.36, 0.36, 0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  26,   65,    4, new THREE.Vector3( -0.25, 0.25, 0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(   9,   45,   29, new THREE.Vector3( 0.21, -0.95, 0.21 ).normalize()));
	geometry.faces.push(new THREE.Face3(  45,   47,   74, new THREE.Vector3( 0.48, -0.86, 0.20 ).normalize()));
	geometry.faces.push(new THREE.Face3(  74,   29,   45, new THREE.Vector3( 0.32, -0.89, 0.32 ).normalize()));
	geometry.faces.push(new THREE.Face3(  29,   74,   31, new THREE.Vector3( 0.24, -0.77, 0.58 ).normalize()));
	geometry.faces.push(new THREE.Face3(  47,   19,   58, new THREE.Vector3( 0.68, -0.71, 0.18 ).normalize()));
	geometry.faces.push(new THREE.Face3(  58,   74,   47, new THREE.Vector3( 0.62, -0.74, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  74,   58,   56, new THREE.Vector3( 0.56, -0.60, 0.56 ).normalize()));
	geometry.faces.push(new THREE.Face3(  56,   31,   74, new THREE.Vector3( 0.32, -0.56, 0.76 ).normalize()));
	geometry.faces.push(new THREE.Face3(  31,   56,    7, new THREE.Vector3( 0.23, -0.42, 0.88 ).normalize()));
	geometry.faces.push(new THREE.Face3(   1,   40,   33, new THREE.Vector3( 0.25, 0.94, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  40,   42,   75, new THREE.Vector3( 0.68, 0.68, -0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  75,   33,   40, new THREE.Vector3( 0.41, 0.81, -0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  33,   75,   35, new THREE.Vector3( 0.28, 0.68, -0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  42,   16,   63, new THREE.Vector3( 0.94, 0.25, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  63,   75,   42, new THREE.Vector3( 0.86, 0.36, -0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  75,   63,   61, new THREE.Vector3( 0.69, 0.20, -0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  61,   35,   75, new THREE.Vector3( 0.36, 0.36, -0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  35,   61,   15, new THREE.Vector3( 0.25, 0.25, -0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  28,   53,    8, new THREE.Vector3( -0.25, -0.94, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  76,   55,   53, new THREE.Vector3( -0.68, -0.68, 0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  53,   28,   76, new THREE.Vector3( -0.41, -0.81, 0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  30,   76,   28, new THREE.Vector3( -0.28, -0.68, 0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  66,   22,   55, new THREE.Vector3( -0.94, -0.25, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  55,   76,   66, new THREE.Vector3( -0.86, -0.36, 0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  64,   66,   76, new THREE.Vector3( -0.69, -0.20, 0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  76,   30,   64, new THREE.Vector3( -0.36, -0.36, 0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(   6,   64,   30, new THREE.Vector3( -0.25, -0.25, 0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  37,   44,   11, new THREE.Vector3( 0.21, -0.95, -0.21 ).normalize()));
	geometry.faces.push(new THREE.Face3(  77,   46,   44, new THREE.Vector3( 0.48, -0.86, -0.20 ).normalize()));
	geometry.faces.push(new THREE.Face3(  44,   37,   77, new THREE.Vector3( 0.32, -0.89, -0.32 ).normalize()));
	geometry.faces.push(new THREE.Face3(  39,   77,   37, new THREE.Vector3( 0.24, -0.77, -0.58 ).normalize()));
	geometry.faces.push(new THREE.Face3(  62,   17,   46, new THREE.Vector3( 0.68, -0.71, -0.18 ).normalize()));
	geometry.faces.push(new THREE.Face3(  46,   77,   62, new THREE.Vector3( 0.62, -0.74, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  60,   62,   77, new THREE.Vector3( 0.56, -0.60, -0.56 ).normalize()));
	geometry.faces.push(new THREE.Face3(  77,   39,   60, new THREE.Vector3( 0.32, -0.56, -0.76 ).normalize()));
	geometry.faces.push(new THREE.Face3(  13,   60,   39, new THREE.Vector3( 0.23, -0.42, -0.88 ).normalize()));
	geometry.faces.push(new THREE.Face3(  32,   48,    0, new THREE.Vector3( -0.25, 0.94, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  78,   50,   48, new THREE.Vector3( -0.68, 0.68, -0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  48,   32,   78, new THREE.Vector3( -0.41, 0.81, -0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  34,   78,   32, new THREE.Vector3( -0.28, 0.68, -0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  71,   21,   50, new THREE.Vector3( -0.94, 0.25, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  50,   78,   71, new THREE.Vector3( -0.86, 0.36, -0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  69,   71,   78, new THREE.Vector3( -0.69, 0.20, -0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  78,   34,   69, new THREE.Vector3( -0.36, 0.36, -0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  14,   69,   34, new THREE.Vector3( -0.25, 0.25, -0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  10,   52,   36, new THREE.Vector3( -0.25, -0.94, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  52,   54,   79, new THREE.Vector3( -0.68, -0.68, -0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  79,   36,   52, new THREE.Vector3( -0.41, -0.81, -0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  36,   79,   38, new THREE.Vector3( -0.28, -0.68, -0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  54,   20,   70, new THREE.Vector3( -0.94, -0.25, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  70,   79,   54, new THREE.Vector3( -0.86, -0.36, -0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  79,   70,   68, new THREE.Vector3( -0.69, -0.20, -0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  68,   38,   79, new THREE.Vector3( -0.36, -0.36, -0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  38,   68,   12, new THREE.Vector3( -0.25, -0.25, -0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(   9,   10,   11, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   9,    8,   10, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   1,    2,    3, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   1,    0,    2, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  33,    0,    1, new THREE.Vector3( 0.00, 0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  33,   32,    0, new THREE.Vector3( 0.00, 0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  36,   11,   10, new THREE.Vector3( 0.00, -0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  36,   37,   11, new THREE.Vector3( 0.00, -0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  32,   35,   34, new THREE.Vector3( 0.00, 0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  32,   33,   35, new THREE.Vector3( 0.00, 0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  37,   38,   39, new THREE.Vector3( 0.00, -0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  37,   36,   38, new THREE.Vector3( 0.00, -0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  44,    9,   11, new THREE.Vector3( 0.22, -0.98, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  44,   45,    9, new THREE.Vector3( 0.22, -0.98, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   1,   41,   40, new THREE.Vector3( 0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   1,    3,   41, new THREE.Vector3( 0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  15,   34,   35, new THREE.Vector3( 0.00, 0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  15,   14,   34, new THREE.Vector3( 0.00, 0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  27,    4,    5, new THREE.Vector3( 0.00, 0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  27,   26,    4, new THREE.Vector3( 0.00, 0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  26,   25,   24, new THREE.Vector3( 0.00, 0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  26,   27,   25, new THREE.Vector3( 0.00, 0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  24,    3,    2, new THREE.Vector3( 0.00, 0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  24,   25,    3, new THREE.Vector3( 0.00, 0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  18,   42,   43, new THREE.Vector3( 0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  18,   16,   42, new THREE.Vector3( 0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  51,   21,   23, new THREE.Vector3( -0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  51,   50,   21, new THREE.Vector3( -0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  50,   49,   48, new THREE.Vector3( -0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  50,   51,   49, new THREE.Vector3( -0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  43,   40,   41, new THREE.Vector3( 0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  43,   42,   40, new THREE.Vector3( 0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  48,    2,    0, new THREE.Vector3( -0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  48,   49,    2, new THREE.Vector3( -0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  29,    8,    9, new THREE.Vector3( 0.00, -0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  29,   28,    8, new THREE.Vector3( 0.00, -0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  53,   10,    8, new THREE.Vector3( -0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  53,   52,   10, new THREE.Vector3( -0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  55,   52,   53, new THREE.Vector3( -0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  55,   54,   52, new THREE.Vector3( -0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  45,   46,   47, new THREE.Vector3( 0.49, -0.87, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  45,   44,   46, new THREE.Vector3( 0.49, -0.87, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  12,   39,   38, new THREE.Vector3( 0.00, -0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  12,   13,   39, new THREE.Vector3( 0.00, -0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  54,   22,   20, new THREE.Vector3( -0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  54,   55,   22, new THREE.Vector3( -0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  17,   47,   46, new THREE.Vector3( 0.69, -0.73, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  17,   19,   47, new THREE.Vector3( 0.69, -0.73, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   7,   30,   31, new THREE.Vector3( 0.00, -0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(   7,    6,   30, new THREE.Vector3( 0.00, -0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  31,   28,   29, new THREE.Vector3( 0.00, -0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  31,   30,   28, new THREE.Vector3( 0.00, -0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  80,    6,    7, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  80,   81,    6, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  80,    4,   81, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  80,    5,    4, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  80,   57,    5, new THREE.Vector3( 0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  80,   82,   57, new THREE.Vector3( 0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  80,   56,   82, new THREE.Vector3( 0.26, -0.07, 0.96 ).normalize()));
	geometry.faces.push(new THREE.Face3(  80,    7,   56, new THREE.Vector3( 0.26, -0.07, 0.96 ).normalize()));
	geometry.faces.push(new THREE.Face3(  81,   64,    6, new THREE.Vector3( -0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  81,   83,   64, new THREE.Vector3( -0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  81,   65,   83, new THREE.Vector3( -0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  81,    4,   65, new THREE.Vector3( -0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  82,   59,   57, new THREE.Vector3( 0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  82,   84,   59, new THREE.Vector3( 0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  82,   58,   84, new THREE.Vector3( 0.69, -0.20, 0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  82,   56,   58, new THREE.Vector3( 0.69, -0.20, 0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  83,   66,   64, new THREE.Vector3( -0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  83,   85,   66, new THREE.Vector3( -0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  83,   67,   85, new THREE.Vector3( -0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  83,   65,   67, new THREE.Vector3( -0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  84,   18,   59, new THREE.Vector3( 0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  84,   86,   18, new THREE.Vector3( 0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  84,   19,   86, new THREE.Vector3( 0.93, -0.27, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  84,   58,   19, new THREE.Vector3( 0.93, -0.27, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  85,   22,   66, new THREE.Vector3( -0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  85,   87,   22, new THREE.Vector3( -0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  85,   23,   87, new THREE.Vector3( -0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  85,   67,   23, new THREE.Vector3( -0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  86,   16,   18, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  86,   88,   16, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  86,   17,   88, new THREE.Vector3( 0.96, -0.28, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  86,   19,   17, new THREE.Vector3( 0.96, -0.28, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  87,   20,   22, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  87,   89,   20, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  87,   21,   89, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  87,   23,   21, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  88,   63,   16, new THREE.Vector3( 0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  88,   90,   63, new THREE.Vector3( 0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  88,   62,   90, new THREE.Vector3( 0.93, -0.27, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  88,   17,   62, new THREE.Vector3( 0.93, -0.27, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  89,   70,   20, new THREE.Vector3( -0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  89,   91,   70, new THREE.Vector3( -0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  89,   71,   91, new THREE.Vector3( -0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  89,   21,   71, new THREE.Vector3( -0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  90,   61,   63, new THREE.Vector3( 0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  90,   92,   61, new THREE.Vector3( 0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  90,   60,   92, new THREE.Vector3( 0.69, -0.20, -0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  90,   62,   60, new THREE.Vector3( 0.69, -0.20, -0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  91,   68,   70, new THREE.Vector3( -0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  91,   93,   68, new THREE.Vector3( -0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  91,   69,   93, new THREE.Vector3( -0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  91,   71,   69, new THREE.Vector3( -0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  92,   15,   61, new THREE.Vector3( 0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  92,   94,   15, new THREE.Vector3( 0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  92,   13,   94, new THREE.Vector3( 0.26, -0.07, -0.96 ).normalize()));
	geometry.faces.push(new THREE.Face3(  92,   60,   13, new THREE.Vector3( 0.26, -0.07, -0.96 ).normalize()));
	geometry.faces.push(new THREE.Face3(  93,   12,   68, new THREE.Vector3( -0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  93,   95,   12, new THREE.Vector3( -0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  93,   14,   95, new THREE.Vector3( -0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  93,   69,   14, new THREE.Vector3( -0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  94,   14,   15, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  94,   95,   14, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  94,   12,   95, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  94,   13,   12, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	var material = new THREE.MeshLambertMaterial( {color:0xF1F1F1} );
	var mesh = new THREE.Mesh( geometry, material );
	var center = new THREE.Vector3( 45.250000, -27.000000, -7.300000 );
	return [mesh,center];
}
