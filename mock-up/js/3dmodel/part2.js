// name = horn shoulder roll l
// verticesNum = 157
// indicesNum = 190
// center = ( 43.249699, 47.799999, -25.799999 )
// length = ( 12.000000, 16.000000, 4.600000 ) 
function initPartsValues2() {
	var geometry = new THREE.Geometry();
	geometry.vertices.push(new THREE.Vector3(  48.0497,  47.8000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  47.6746,  49.2000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  46.6497,  50.2249, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  50.6000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  43.8497,  50.2249, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  42.8248,  49.2000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  42.4497,  47.8000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  42.8248,  46.4000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  43.8497,  45.3751, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  45.0000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  46.6497,  45.3751, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  47.6746,  46.4000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  48.0497,  47.8000, -28.1000 ));
	geometry.vertices.push(new THREE.Vector3(  47.6746,  49.2000, -28.1000 ));
	geometry.vertices.push(new THREE.Vector3(  46.6497,  50.2249, -28.1000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  50.6000, -28.1000 ));
	geometry.vertices.push(new THREE.Vector3(  43.8497,  50.2249, -28.1000 ));
	geometry.vertices.push(new THREE.Vector3(  42.8248,  49.2000, -28.1000 ));
	geometry.vertices.push(new THREE.Vector3(  42.4497,  47.8000, -28.1000 ));
	geometry.vertices.push(new THREE.Vector3(  42.8248,  46.4000, -28.1000 ));
	geometry.vertices.push(new THREE.Vector3(  43.8497,  45.3751, -28.1000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  45.0000, -28.1000 ));
	geometry.vertices.push(new THREE.Vector3(  46.6497,  45.3751, -28.1000 ));
	geometry.vertices.push(new THREE.Vector3(  47.6746,  46.4000, -28.1000 ));
	geometry.vertices.push(new THREE.Vector3(  49.2497,  47.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  48.7138,  49.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  47.2497,  51.2641, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  51.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  43.2497,  51.2641, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  41.7856,  49.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  41.2497,  47.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  41.7856,  45.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  43.2497,  44.3359, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  43.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  47.2497,  44.3359, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  48.7138,  45.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  49.0021,  49.4628, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  46.4807,  55.3413, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  55.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  41.2497,  54.7282, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  38.3215,  51.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  37.2497,  47.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  38.3215,  43.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  41.2497,  40.8718, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  39.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  46.4807,  40.2587, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  49.0021,  46.1372, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  49.2497,  47.8000, -23.5000 ));
	geometry.vertices.push(new THREE.Vector3(  48.7138,  49.8000, -23.5000 ));
	geometry.vertices.push(new THREE.Vector3(  47.2497,  51.2641, -23.5000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  51.8000, -23.5000 ));
	geometry.vertices.push(new THREE.Vector3(  43.2497,  51.2641, -23.5000 ));
	geometry.vertices.push(new THREE.Vector3(  41.7856,  49.8000, -23.5000 ));
	geometry.vertices.push(new THREE.Vector3(  41.2497,  47.8000, -23.5000 ));
	geometry.vertices.push(new THREE.Vector3(  41.7856,  45.8000, -23.5000 ));
	geometry.vertices.push(new THREE.Vector3(  43.2497,  44.3359, -23.5000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  43.8000, -23.5000 ));
	geometry.vertices.push(new THREE.Vector3(  47.2497,  44.3359, -23.5000 ));
	geometry.vertices.push(new THREE.Vector3(  48.7138,  45.8000, -23.5000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  47.8000, -23.5000 ));
	geometry.vertices.push(new THREE.Vector3(  48.0497,  47.8000, -28.1000 ));
	geometry.vertices.push(new THREE.Vector3(  47.6746,  49.2000, -28.1000 ));
	geometry.vertices.push(new THREE.Vector3(  46.6497,  50.2249, -28.1000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  50.6000, -28.1000 ));
	geometry.vertices.push(new THREE.Vector3(  43.8497,  50.2249, -28.1000 ));
	geometry.vertices.push(new THREE.Vector3(  42.8248,  49.2000, -28.1000 ));
	geometry.vertices.push(new THREE.Vector3(  42.4497,  47.8000, -28.1000 ));
	geometry.vertices.push(new THREE.Vector3(  42.8248,  46.4000, -28.1000 ));
	geometry.vertices.push(new THREE.Vector3(  43.8497,  45.3751, -28.1000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  45.0000, -28.1000 ));
	geometry.vertices.push(new THREE.Vector3(  46.6497,  45.3751, -28.1000 ));
	geometry.vertices.push(new THREE.Vector3(  47.6746,  46.4000, -28.1000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  47.8000, -28.1000 ));
	geometry.vertices.push(new THREE.Vector3(  49.2497,  47.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  49.0021,  49.4628, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  46.4807,  55.3413, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  55.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  41.2497,  54.7282, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  38.3215,  51.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  37.2497,  47.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  38.3215,  43.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  41.2497,  40.8718, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  39.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  46.4807,  40.2587, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  49.0021,  46.1372, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  49.2497,  47.8000, -26.5000 ));
	geometry.vertices.push(new THREE.Vector3(  49.0021,  49.4628, -26.5000 ));
	geometry.vertices.push(new THREE.Vector3(  46.4807,  55.3413, -26.5000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  55.8000, -26.5000 ));
	geometry.vertices.push(new THREE.Vector3(  41.2497,  54.7282, -26.5000 ));
	geometry.vertices.push(new THREE.Vector3(  38.3215,  51.8000, -26.5000 ));
	geometry.vertices.push(new THREE.Vector3(  37.2497,  47.8000, -26.5000 ));
	geometry.vertices.push(new THREE.Vector3(  38.3215,  43.8000, -26.5000 ));
	geometry.vertices.push(new THREE.Vector3(  41.2497,  40.8718, -26.5000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  39.8000, -26.5000 ));
	geometry.vertices.push(new THREE.Vector3(  46.4807,  40.2587, -26.5000 ));
	geometry.vertices.push(new THREE.Vector3(  49.0021,  46.1372, -26.5000 ));
	geometry.vertices.push(new THREE.Vector3(  48.9568,  47.8000, -27.2071 ));
	geometry.vertices.push(new THREE.Vector3(  48.7484,  49.4019, -27.2071 ));
	geometry.vertices.push(new THREE.Vector3(  46.3343,  55.0652, -27.2071 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  55.5071, -27.2071 ));
	geometry.vertices.push(new THREE.Vector3(  41.3961,  54.4746, -27.2071 ));
	geometry.vertices.push(new THREE.Vector3(  38.5751,  51.6536, -27.2071 ));
	geometry.vertices.push(new THREE.Vector3(  37.5426,  47.8000, -27.2071 ));
	geometry.vertices.push(new THREE.Vector3(  38.5751,  43.9464, -27.2071 ));
	geometry.vertices.push(new THREE.Vector3(  41.3961,  41.1255, -27.2071 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  40.0929, -27.2071 ));
	geometry.vertices.push(new THREE.Vector3(  46.3343,  40.5348, -27.2071 ));
	geometry.vertices.push(new THREE.Vector3(  48.7484,  46.1981, -27.2071 ));
	geometry.vertices.push(new THREE.Vector3(  48.2497,  47.8000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  48.1361,  49.2549, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  45.9807,  54.3986, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  54.8000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  41.7497,  53.8622, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  39.1875,  51.3000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  38.2497,  47.8000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  39.1875,  44.3000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  41.7497,  41.7378, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  40.8000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  45.9807,  41.2014, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  48.1361,  46.3451, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  48.0497,  47.8000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  47.6746,  49.2000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  46.6497,  50.2249, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  50.6000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  43.8497,  50.2249, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  42.8248,  49.2000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  42.4497,  47.8000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  42.8248,  46.4000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  43.8497,  45.3751, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  45.0000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  46.6497,  45.3751, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  47.6746,  46.4000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  49.2497,  47.8000, -23.5000 ));
	geometry.vertices.push(new THREE.Vector3(  48.7138,  49.8000, -23.5000 ));
	geometry.vertices.push(new THREE.Vector3(  47.2497,  51.2641, -23.5000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  51.8000, -23.5000 ));
	geometry.vertices.push(new THREE.Vector3(  43.2497,  51.2641, -23.5000 ));
	geometry.vertices.push(new THREE.Vector3(  41.7856,  49.8000, -23.5000 ));
	geometry.vertices.push(new THREE.Vector3(  41.2497,  47.8000, -23.5000 ));
	geometry.vertices.push(new THREE.Vector3(  41.7856,  45.8000, -23.5000 ));
	geometry.vertices.push(new THREE.Vector3(  43.2497,  44.3359, -23.5000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  43.8000, -23.5000 ));
	geometry.vertices.push(new THREE.Vector3(  47.2497,  44.3359, -23.5000 ));
	geometry.vertices.push(new THREE.Vector3(  48.7138,  45.8000, -23.5000 ));
	geometry.vertices.push(new THREE.Vector3(  49.2497,  47.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  48.7138,  49.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  47.2497,  51.2641, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  51.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  43.2497,  51.2641, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  41.7856,  49.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  41.2497,  47.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  41.7856,  45.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  43.2497,  44.3359, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  45.2497,  43.8000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  47.2497,  44.3359, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3(  48.7138,  45.8000, -25.5000 ));
	geometry.faces.push(new THREE.Face3(  25,   24,   36, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  35,   46,   24, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  48,   49,   59, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  51,   52,   59, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  54,   55,   59, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  57,   58,   59, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  25,   36,   37, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  26,   25,   37, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  35,   34,   45, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  46,   35,   45, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   0,   13,    1, new THREE.Vector3( 0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   0,   12,   13, new THREE.Vector3( 0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   1,   14,    2, new THREE.Vector3( 0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   1,   13,   14, new THREE.Vector3( 0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   2,   15,    3, new THREE.Vector3( 0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   2,   14,   15, new THREE.Vector3( 0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   3,   16,    4, new THREE.Vector3( -0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   3,   15,   16, new THREE.Vector3( -0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   4,   17,    5, new THREE.Vector3( -0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   4,   16,   17, new THREE.Vector3( -0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   5,   18,    6, new THREE.Vector3( -0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   5,   17,   18, new THREE.Vector3( -0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   6,   19,    7, new THREE.Vector3( -0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   6,   18,   19, new THREE.Vector3( -0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   7,   20,    8, new THREE.Vector3( -0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   7,   19,   20, new THREE.Vector3( -0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   8,   21,    9, new THREE.Vector3( -0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   8,   20,   21, new THREE.Vector3( -0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   9,   22,   10, new THREE.Vector3( 0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   9,   21,   22, new THREE.Vector3( 0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  10,   23,   11, new THREE.Vector3( 0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  10,   22,   23, new THREE.Vector3( 0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  11,   12,    0, new THREE.Vector3( 0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  11,   23,   12, new THREE.Vector3( 0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  87,   74,   86, new THREE.Vector3( 0.92, 0.39, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  87,   75,   74, new THREE.Vector3( 0.92, 0.39, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  88,   75,   87, new THREE.Vector3( 0.35, 0.94, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  88,   76,   75, new THREE.Vector3( 0.35, 0.94, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  89,   76,   88, new THREE.Vector3( -0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  89,   77,   76, new THREE.Vector3( -0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  90,   77,   89, new THREE.Vector3( -0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  90,   78,   77, new THREE.Vector3( -0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  91,   78,   90, new THREE.Vector3( -0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  91,   79,   78, new THREE.Vector3( -0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  92,   79,   91, new THREE.Vector3( -0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  92,   80,   79, new THREE.Vector3( -0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  93,   80,   92, new THREE.Vector3( -0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  93,   81,   80, new THREE.Vector3( -0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  94,   81,   93, new THREE.Vector3( -0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  94,   82,   81, new THREE.Vector3( -0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  95,   82,   94, new THREE.Vector3( 0.35, -0.94, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  95,   83,   82, new THREE.Vector3( 0.35, -0.94, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  96,   83,   95, new THREE.Vector3( 0.92, -0.39, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  96,   84,   83, new THREE.Vector3( 0.92, -0.39, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  98,   85,   97, new THREE.Vector3( 0.92, 0.12, -0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3(  98,   86,   85, new THREE.Vector3( 0.93, 0.14, -0.34 ).normalize()));
	geometry.faces.push(new THREE.Face3(  85,  108,   97, new THREE.Vector3( 0.92, -0.12, -0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3(  85,   96,  108, new THREE.Vector3( 0.93, -0.14, -0.34 ).normalize()));
	geometry.faces.push(new THREE.Face3( 146,  133,  145, new THREE.Vector3( 0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 146,  134,  133, new THREE.Vector3( 0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 147,  134,  146, new THREE.Vector3( 0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 147,  135,  134, new THREE.Vector3( 0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 148,  135,  147, new THREE.Vector3( 0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 148,  136,  135, new THREE.Vector3( 0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 149,  136,  148, new THREE.Vector3( -0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 149,  137,  136, new THREE.Vector3( -0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 150,  137,  149, new THREE.Vector3( -0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 150,  138,  137, new THREE.Vector3( -0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 151,  138,  150, new THREE.Vector3( -0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 151,  139,  138, new THREE.Vector3( -0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 152,  139,  151, new THREE.Vector3( -0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 152,  140,  139, new THREE.Vector3( -0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 153,  140,  152, new THREE.Vector3( -0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 153,  141,  140, new THREE.Vector3( -0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 154,  141,  153, new THREE.Vector3( -0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 154,  142,  141, new THREE.Vector3( -0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 155,  142,  154, new THREE.Vector3( 0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 155,  143,  142, new THREE.Vector3( 0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 156,  143,  155, new THREE.Vector3( 0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 156,  144,  143, new THREE.Vector3( 0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 145,  144,  156, new THREE.Vector3( 0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 145,  133,  144, new THREE.Vector3( 0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  48,   58,   47, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  48,   59,   58, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  49,   51,   59, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  49,   50,   51, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  52,   54,   59, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  52,   53,   54, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  55,   57,   59, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  55,   56,   57, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  28,   40,   29, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  28,   39,   40, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  31,   43,   32, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  31,   42,   43, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  87,   98,   99, new THREE.Vector3( 0.87, 0.37, -0.32 ).normalize()));
	geometry.faces.push(new THREE.Face3(  87,   86,   98, new THREE.Vector3( 0.86, 0.37, -0.34 ).normalize()));
	geometry.faces.push(new THREE.Face3(  88,   99,  100, new THREE.Vector3( 0.35, 0.86, -0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  88,   87,   99, new THREE.Vector3( 0.32, 0.86, -0.40 ).normalize()));
	geometry.faces.push(new THREE.Face3( 101,   88,  100, new THREE.Vector3( -0.24, 0.90, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3( 101,   89,   88, new THREE.Vector3( -0.24, 0.90, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3( 102,   89,  101, new THREE.Vector3( -0.66, 0.66, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3( 102,   90,   89, new THREE.Vector3( -0.66, 0.66, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3( 103,   90,  102, new THREE.Vector3( -0.90, 0.24, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3( 103,   91,   90, new THREE.Vector3( -0.90, 0.24, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3( 104,   91,  103, new THREE.Vector3( -0.90, -0.24, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3( 104,   92,   91, new THREE.Vector3( -0.90, -0.24, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3( 105,   92,  104, new THREE.Vector3( -0.66, -0.66, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3( 105,   93,   92, new THREE.Vector3( -0.66, -0.66, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3( 106,   93,  105, new THREE.Vector3( -0.24, -0.90, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3( 106,   94,   93, new THREE.Vector3( -0.24, -0.90, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3( 107,   94,  106, new THREE.Vector3( 0.35, -0.86, -0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3( 107,   95,   94, new THREE.Vector3( 0.32, -0.86, -0.40 ).normalize()));
	geometry.faces.push(new THREE.Face3( 108,   95,  107, new THREE.Vector3( 0.87, -0.37, -0.32 ).normalize()));
	geometry.faces.push(new THREE.Face3( 108,   96,   95, new THREE.Vector3( 0.86, -0.37, -0.34 ).normalize()));
	geometry.faces.push(new THREE.Face3(  98,  109,  110, new THREE.Vector3( 0.42, 0.03, -0.90 ).normalize()));
	geometry.faces.push(new THREE.Face3(  98,   97,  109, new THREE.Vector3( 0.38, 0.05, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3( 113,  100,  112, new THREE.Vector3( -0.10, 0.38, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3( 113,  101,  100, new THREE.Vector3( -0.10, 0.38, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3( 114,  101,  113, new THREE.Vector3( -0.28, 0.28, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3( 114,  102,  101, new THREE.Vector3( -0.28, 0.28, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3( 115,  102,  114, new THREE.Vector3( -0.38, 0.10, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3( 115,  103,  102, new THREE.Vector3( -0.38, 0.10, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3( 116,  103,  115, new THREE.Vector3( -0.38, -0.10, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3( 116,  104,  103, new THREE.Vector3( -0.38, -0.10, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3( 117,  104,  116, new THREE.Vector3( -0.28, -0.28, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3( 117,  105,  104, new THREE.Vector3( -0.28, -0.28, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3( 118,  105,  117, new THREE.Vector3( -0.10, -0.38, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3( 118,  106,  105, new THREE.Vector3( -0.10, -0.38, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3( 109,  108,  120, new THREE.Vector3( 0.42, -0.03, -0.90 ).normalize()));
	geometry.faces.push(new THREE.Face3( 109,   97,  108, new THREE.Vector3( 0.38, -0.05, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3( 109,  122,  110, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 109,  121,  122, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 116,  129,  117, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 116,  128,  129, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 120,  121,  109, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 120,  132,  121, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  27,   39,   28, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  27,   38,   39, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  29,   41,   30, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  29,   40,   41, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  30,   42,   31, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  30,   41,   42, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  32,   44,   33, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  32,   43,   44, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  60,   62,   61, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  60,   72,   62, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  62,   64,   63, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  62,   72,   64, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  64,   66,   65, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  64,   72,   66, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  66,   68,   67, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  66,   72,   68, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  68,   70,   69, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  68,   72,   70, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  70,   60,   71, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  70,   72,   60, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 100,  111,  112, new THREE.Vector3( 0.21, 0.37, -0.90 ).normalize()));
	geometry.faces.push(new THREE.Face3( 100,   99,  111, new THREE.Vector3( 0.14, 0.34, -0.93 ).normalize()));
	geometry.faces.push(new THREE.Face3( 119,  106,  118, new THREE.Vector3( 0.21, -0.37, -0.90 ).normalize()));
	geometry.faces.push(new THREE.Face3( 119,  107,  106, new THREE.Vector3( 0.14, -0.34, -0.93 ).normalize()));
	geometry.faces.push(new THREE.Face3( 112,  125,  113, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 112,  124,  125, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 113,  126,  114, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 113,  125,  126, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 114,  127,  115, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 114,  126,  127, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 115,  128,  116, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 115,  127,  128, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 117,  130,  118, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 117,  129,  130, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  26,   38,   27, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  26,   37,   38, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  33,   45,   34, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  33,   44,   45, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 118,  131,  119, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 118,  130,  131, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 120,  107,  119, new THREE.Vector3( 0.41, -0.17, -0.89 ).normalize()));
	geometry.faces.push(new THREE.Face3( 120,  108,  107, new THREE.Vector3( 0.39, -0.17, -0.90 ).normalize()));
	geometry.faces.push(new THREE.Face3( 111,  124,  112, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 111,  123,  124, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  73,   86,   74, new THREE.Vector3( 0.99, 0.15, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  73,   85,   86, new THREE.Vector3( 0.99, 0.15, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  85,   84,   96, new THREE.Vector3( 0.99, -0.15, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  85,   73,   84, new THREE.Vector3( 0.99, -0.15, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 119,  132,  120, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 119,  131,  132, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 110,   99,   98, new THREE.Vector3( 0.39, 0.17, -0.90 ).normalize()));
	geometry.faces.push(new THREE.Face3( 110,  111,   99, new THREE.Vector3( 0.41, 0.17, -0.89 ).normalize()));
	geometry.faces.push(new THREE.Face3( 123,  110,  122, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 123,  111,  110, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	var material = new THREE.MeshLambertMaterial( {color:0x010101} );
	var mesh = new THREE.Mesh( geometry, material );
	var center = new THREE.Vector3( 43.249699, 47.799999, -25.799999 );
	return [mesh,center];
}
