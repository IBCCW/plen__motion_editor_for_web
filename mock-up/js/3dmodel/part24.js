// name = horn thigh pitch r
// verticesNum = 157
// indicesNum = 190
// center = ( -41.299801, -31.500000, -4.000000 )
// length = ( 4.599998, 12.000000, 16.000000 ) 
function initPartsValues24() {
	var geometry = new THREE.Geometry();
	geometry.vertices.push(new THREE.Vector3( -40.9998, -25.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -26.0359,  -2.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -27.5000,  -0.5359 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -29.5000,  -0.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -31.5000,  -0.5359 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -32.9641,  -2.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -33.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -32.9641,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -31.5000,  -7.4641 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -29.5000,  -8.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -27.5000,  -7.4641 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -26.0359,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -25.7476,  -2.3372 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -28.2690,   3.5413 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -29.5000,   4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -33.5000,   2.9282 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -36.4282,  -0.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -37.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -36.4282,  -8.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -33.5000, -10.9282 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -29.5000, -12.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -28.2690, -11.5413 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -25.7476,  -5.6628 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -25.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -25.7476,  -2.3372 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -28.2690,   3.5413 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -29.5000,   4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -33.5000,   2.9282 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -36.4282,  -0.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -37.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -36.4282,  -8.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -33.5000, -10.9282 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -29.5000, -12.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -28.2690, -11.5413 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -25.7476,  -5.6628 ));
	geometry.vertices.push(new THREE.Vector3( -41.9998, -25.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -41.9998, -25.7476,  -2.3372 ));
	geometry.vertices.push(new THREE.Vector3( -41.9998, -28.2690,   3.5413 ));
	geometry.vertices.push(new THREE.Vector3( -41.9998, -29.5000,   4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -41.9998, -33.5000,   2.9282 ));
	geometry.vertices.push(new THREE.Vector3( -41.9998, -36.4282,  -0.0000 ));
	geometry.vertices.push(new THREE.Vector3( -41.9998, -37.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -41.9998, -36.4282,  -8.0000 ));
	geometry.vertices.push(new THREE.Vector3( -41.9998, -33.5000, -10.9282 ));
	geometry.vertices.push(new THREE.Vector3( -41.9998, -29.5000, -12.0000 ));
	geometry.vertices.push(new THREE.Vector3( -41.9998, -28.2690, -11.5413 ));
	geometry.vertices.push(new THREE.Vector3( -41.9998, -25.7476,  -5.6628 ));
	geometry.vertices.push(new THREE.Vector3( -42.7069, -25.7929,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.7069, -26.0013,  -2.3981 ));
	geometry.vertices.push(new THREE.Vector3( -42.7069, -28.4154,   3.2652 ));
	geometry.vertices.push(new THREE.Vector3( -42.7069, -29.5000,   3.7071 ));
	geometry.vertices.push(new THREE.Vector3( -42.7069, -33.3535,   2.6746 ));
	geometry.vertices.push(new THREE.Vector3( -42.7069, -36.1745,  -0.1464 ));
	geometry.vertices.push(new THREE.Vector3( -42.7069, -37.2071,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.7069, -36.1745,  -7.8536 ));
	geometry.vertices.push(new THREE.Vector3( -42.7069, -33.3535, -10.6745 ));
	geometry.vertices.push(new THREE.Vector3( -42.7069, -29.5000, -11.7071 ));
	geometry.vertices.push(new THREE.Vector3( -42.7069, -28.4154, -11.2652 ));
	geometry.vertices.push(new THREE.Vector3( -42.7069, -26.0013,  -5.6019 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -26.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -26.6136,  -2.5451 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -28.7690,   2.5986 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -29.5000,   3.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -33.0000,   2.0622 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -35.5622,  -0.5000 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -36.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -35.5622,  -7.5000 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -33.0000, -10.0622 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -29.5000, -11.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -28.7690, -10.5986 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -26.6136,  -5.4549 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -26.7000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -27.0751,  -2.6000 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -28.1000,  -1.5751 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -29.5000,  -1.2000 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -30.9000,  -1.5751 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -31.9249,  -2.6000 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -32.3000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -31.9249,  -5.4000 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -30.9000,  -6.4249 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -29.5000,  -6.8000 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -28.1000,  -6.4249 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -27.0751,  -5.4000 ));
	geometry.vertices.push(new THREE.Vector3( -38.9998, -25.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.9998, -26.0359,  -2.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.9998, -27.5000,  -0.5359 ));
	geometry.vertices.push(new THREE.Vector3( -38.9998, -29.5000,  -0.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.9998, -31.5000,  -0.5359 ));
	geometry.vertices.push(new THREE.Vector3( -38.9998, -32.9641,  -2.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.9998, -33.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.9998, -32.9641,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.9998, -31.5000,  -7.4641 ));
	geometry.vertices.push(new THREE.Vector3( -38.9998, -29.5000,  -8.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.9998, -27.5000,  -7.4641 ));
	geometry.vertices.push(new THREE.Vector3( -38.9998, -26.0359,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -25.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -26.0359,  -2.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -27.5000,  -0.5359 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -29.5000,  -0.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -31.5000,  -0.5359 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -32.9641,  -2.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -33.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -32.9641,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -31.5000,  -7.4641 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -29.5000,  -8.0000 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -27.5000,  -7.4641 ));
	geometry.vertices.push(new THREE.Vector3( -40.9998, -26.0359,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -26.7000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -27.0751,  -2.6000 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -28.1000,  -1.5751 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -29.5000,  -1.2000 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -30.9000,  -1.5751 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -31.9249,  -2.6000 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -32.3000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -31.9249,  -5.4000 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -30.9000,  -6.4249 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -29.5000,  -6.8000 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -28.1000,  -6.4249 ));
	geometry.vertices.push(new THREE.Vector3( -42.9998, -27.0751,  -5.4000 ));
	geometry.vertices.push(new THREE.Vector3( -43.5998, -26.7000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -43.5998, -27.0751,  -2.6000 ));
	geometry.vertices.push(new THREE.Vector3( -43.5998, -28.1000,  -1.5751 ));
	geometry.vertices.push(new THREE.Vector3( -43.5998, -29.5000,  -1.2000 ));
	geometry.vertices.push(new THREE.Vector3( -43.5998, -30.9000,  -1.5751 ));
	geometry.vertices.push(new THREE.Vector3( -43.5998, -31.9249,  -2.6000 ));
	geometry.vertices.push(new THREE.Vector3( -43.5998, -32.3000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -43.5998, -31.9249,  -5.4000 ));
	geometry.vertices.push(new THREE.Vector3( -43.5998, -30.9000,  -6.4249 ));
	geometry.vertices.push(new THREE.Vector3( -43.5998, -29.5000,  -6.8000 ));
	geometry.vertices.push(new THREE.Vector3( -43.5998, -28.1000,  -6.4249 ));
	geometry.vertices.push(new THREE.Vector3( -43.5998, -27.0751,  -5.4000 ));
	geometry.vertices.push(new THREE.Vector3( -38.9998, -25.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.9998, -26.0359,  -2.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.9998, -27.5000,  -0.5359 ));
	geometry.vertices.push(new THREE.Vector3( -38.9998, -29.5000,  -0.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.9998, -31.5000,  -0.5359 ));
	geometry.vertices.push(new THREE.Vector3( -38.9998, -32.9641,  -2.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.9998, -33.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.9998, -32.9641,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.9998, -31.5000,  -7.4641 ));
	geometry.vertices.push(new THREE.Vector3( -38.9998, -29.5000,  -8.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.9998, -27.5000,  -7.4641 ));
	geometry.vertices.push(new THREE.Vector3( -38.9998, -26.0359,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.9998, -29.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -43.5998, -26.7000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -43.5998, -27.0751,  -2.6000 ));
	geometry.vertices.push(new THREE.Vector3( -43.5998, -28.1000,  -1.5751 ));
	geometry.vertices.push(new THREE.Vector3( -43.5998, -29.5000,  -1.2000 ));
	geometry.vertices.push(new THREE.Vector3( -43.5998, -30.9000,  -1.5751 ));
	geometry.vertices.push(new THREE.Vector3( -43.5998, -31.9249,  -2.6000 ));
	geometry.vertices.push(new THREE.Vector3( -43.5998, -32.3000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -43.5998, -31.9249,  -5.4000 ));
	geometry.vertices.push(new THREE.Vector3( -43.5998, -30.9000,  -6.4249 ));
	geometry.vertices.push(new THREE.Vector3( -43.5998, -29.5000,  -6.8000 ));
	geometry.vertices.push(new THREE.Vector3( -43.5998, -28.1000,  -6.4249 ));
	geometry.vertices.push(new THREE.Vector3( -43.5998, -27.0751,  -5.4000 ));
	geometry.vertices.push(new THREE.Vector3( -43.5998, -29.5000,  -4.0000 ));
	geometry.faces.push(new THREE.Face3(   1,    0,   12, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  11,   22,    0, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   1,   12,   13, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   2,    1,   13, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  11,   10,   21, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  22,   11,   21, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 132,  133,  143, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 135,  136,  143, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 138,  139,  143, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 141,  142,  143, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  36,   23,   35, new THREE.Vector3( 0.00, 0.99, 0.15 ).normalize()));
	geometry.faces.push(new THREE.Face3(  36,   24,   23, new THREE.Vector3( 0.00, 0.99, 0.15 ).normalize()));
	geometry.faces.push(new THREE.Face3(  37,   24,   36, new THREE.Vector3( 0.00, 0.92, 0.39 ).normalize()));
	geometry.faces.push(new THREE.Face3(  37,   25,   24, new THREE.Vector3( 0.00, 0.92, 0.39 ).normalize()));
	geometry.faces.push(new THREE.Face3(  38,   25,   37, new THREE.Vector3( 0.00, 0.35, 0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  38,   26,   25, new THREE.Vector3( 0.00, 0.35, 0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  39,   26,   38, new THREE.Vector3( 0.00, -0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  39,   27,   26, new THREE.Vector3( 0.00, -0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  40,   27,   39, new THREE.Vector3( 0.00, -0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  40,   28,   27, new THREE.Vector3( 0.00, -0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  41,   28,   40, new THREE.Vector3( 0.00, -0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  41,   29,   28, new THREE.Vector3( 0.00, -0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  42,   29,   41, new THREE.Vector3( 0.00, -0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  42,   30,   29, new THREE.Vector3( 0.00, -0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  43,   30,   42, new THREE.Vector3( 0.00, -0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  43,   31,   30, new THREE.Vector3( 0.00, -0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  44,   31,   43, new THREE.Vector3( 0.00, -0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  44,   32,   31, new THREE.Vector3( 0.00, -0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  45,   32,   44, new THREE.Vector3( 0.00, 0.35, -0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  45,   33,   32, new THREE.Vector3( 0.00, 0.35, -0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  46,   33,   45, new THREE.Vector3( 0.00, 0.92, -0.39 ).normalize()));
	geometry.faces.push(new THREE.Face3(  46,   34,   33, new THREE.Vector3( 0.00, 0.92, -0.39 ).normalize()));
	geometry.faces.push(new THREE.Face3(  35,   34,   46, new THREE.Vector3( 0.00, 0.99, -0.15 ).normalize()));
	geometry.faces.push(new THREE.Face3(  35,   23,   34, new THREE.Vector3( 0.00, 0.99, -0.15 ).normalize()));
	geometry.faces.push(new THREE.Face3(  48,   35,   47, new THREE.Vector3( -0.38, 0.92, 0.12 ).normalize()));
	geometry.faces.push(new THREE.Face3(  48,   36,   35, new THREE.Vector3( -0.34, 0.93, 0.14 ).normalize()));
	geometry.faces.push(new THREE.Face3(  35,   58,   47, new THREE.Vector3( -0.38, 0.92, -0.12 ).normalize()));
	geometry.faces.push(new THREE.Face3(  35,   46,   58, new THREE.Vector3( -0.34, 0.93, -0.14 ).normalize()));
	geometry.faces.push(new THREE.Face3(  96,   83,   95, new THREE.Vector3( 0.00, 0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  96,   84,   83, new THREE.Vector3( 0.00, 0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  97,   84,   96, new THREE.Vector3( 0.00, 0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  97,   85,   84, new THREE.Vector3( 0.00, 0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  98,   85,   97, new THREE.Vector3( 0.00, 0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  98,   86,   85, new THREE.Vector3( 0.00, 0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  99,   86,   98, new THREE.Vector3( 0.00, -0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  99,   87,   86, new THREE.Vector3( 0.00, -0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3( 100,   87,   99, new THREE.Vector3( 0.00, -0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3( 100,   88,   87, new THREE.Vector3( 0.00, -0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3( 101,   88,  100, new THREE.Vector3( 0.00, -0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3( 101,   89,   88, new THREE.Vector3( 0.00, -0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3( 102,   89,  101, new THREE.Vector3( 0.00, -0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3( 102,   90,   89, new THREE.Vector3( 0.00, -0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3( 103,   90,  102, new THREE.Vector3( 0.00, -0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3( 103,   91,   90, new THREE.Vector3( 0.00, -0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3( 104,   91,  103, new THREE.Vector3( 0.00, -0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3( 104,   92,   91, new THREE.Vector3( 0.00, -0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3( 105,   92,  104, new THREE.Vector3( 0.00, 0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3( 105,   93,   92, new THREE.Vector3( 0.00, 0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3( 106,   93,  105, new THREE.Vector3( 0.00, 0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3( 106,   94,   93, new THREE.Vector3( 0.00, 0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  95,   94,  106, new THREE.Vector3( 0.00, 0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  95,   83,   94, new THREE.Vector3( 0.00, 0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3( 107,  120,  108, new THREE.Vector3( 0.00, 0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3( 107,  119,  120, new THREE.Vector3( 0.00, 0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3( 108,  121,  109, new THREE.Vector3( 0.00, 0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3( 108,  120,  121, new THREE.Vector3( 0.00, 0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3( 109,  122,  110, new THREE.Vector3( 0.00, 0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3( 109,  121,  122, new THREE.Vector3( 0.00, 0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3( 110,  123,  111, new THREE.Vector3( 0.00, -0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3( 110,  122,  123, new THREE.Vector3( 0.00, -0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3( 111,  124,  112, new THREE.Vector3( 0.00, -0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3( 111,  123,  124, new THREE.Vector3( 0.00, -0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3( 112,  125,  113, new THREE.Vector3( 0.00, -0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3( 112,  124,  125, new THREE.Vector3( 0.00, -0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3( 113,  126,  114, new THREE.Vector3( 0.00, -0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3( 113,  125,  126, new THREE.Vector3( 0.00, -0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3( 114,  127,  115, new THREE.Vector3( 0.00, -0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3( 114,  126,  127, new THREE.Vector3( 0.00, -0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3( 115,  128,  116, new THREE.Vector3( 0.00, -0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3( 115,  127,  128, new THREE.Vector3( 0.00, -0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3( 116,  129,  117, new THREE.Vector3( 0.00, 0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3( 116,  128,  129, new THREE.Vector3( 0.00, 0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3( 117,  130,  118, new THREE.Vector3( 0.00, 0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3( 117,  129,  130, new THREE.Vector3( 0.00, 0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3( 118,  119,  107, new THREE.Vector3( 0.00, 0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3( 118,  130,  119, new THREE.Vector3( 0.00, 0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(   4,   16,    5, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   4,   15,   16, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   7,   19,    8, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   7,   18,   19, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  37,   48,   49, new THREE.Vector3( -0.32, 0.87, 0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3(  37,   36,   48, new THREE.Vector3( -0.34, 0.86, 0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3(  38,   49,   50, new THREE.Vector3( -0.36, 0.35, 0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  38,   37,   49, new THREE.Vector3( -0.40, 0.32, 0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  51,   38,   50, new THREE.Vector3( -0.37, -0.24, 0.90 ).normalize()));
	geometry.faces.push(new THREE.Face3(  51,   39,   38, new THREE.Vector3( -0.37, -0.24, 0.90 ).normalize()));
	geometry.faces.push(new THREE.Face3(  52,   39,   51, new THREE.Vector3( -0.37, -0.66, 0.66 ).normalize()));
	geometry.faces.push(new THREE.Face3(  52,   40,   39, new THREE.Vector3( -0.37, -0.66, 0.66 ).normalize()));
	geometry.faces.push(new THREE.Face3(  53,   40,   52, new THREE.Vector3( -0.37, -0.90, 0.24 ).normalize()));
	geometry.faces.push(new THREE.Face3(  53,   41,   40, new THREE.Vector3( -0.37, -0.90, 0.24 ).normalize()));
	geometry.faces.push(new THREE.Face3(  54,   41,   53, new THREE.Vector3( -0.37, -0.90, -0.24 ).normalize()));
	geometry.faces.push(new THREE.Face3(  54,   42,   41, new THREE.Vector3( -0.37, -0.90, -0.24 ).normalize()));
	geometry.faces.push(new THREE.Face3(  55,   42,   54, new THREE.Vector3( -0.37, -0.66, -0.66 ).normalize()));
	geometry.faces.push(new THREE.Face3(  55,   43,   42, new THREE.Vector3( -0.37, -0.66, -0.66 ).normalize()));
	geometry.faces.push(new THREE.Face3(  56,   43,   55, new THREE.Vector3( -0.37, -0.24, -0.90 ).normalize()));
	geometry.faces.push(new THREE.Face3(  56,   44,   43, new THREE.Vector3( -0.37, -0.24, -0.90 ).normalize()));
	geometry.faces.push(new THREE.Face3(  57,   44,   56, new THREE.Vector3( -0.36, 0.35, -0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  57,   45,   44, new THREE.Vector3( -0.40, 0.32, -0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  58,   45,   57, new THREE.Vector3( -0.32, 0.87, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3(  58,   46,   45, new THREE.Vector3( -0.34, 0.86, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3(  48,   59,   60, new THREE.Vector3( -0.90, 0.42, 0.03 ).normalize()));
	geometry.faces.push(new THREE.Face3(  48,   47,   59, new THREE.Vector3( -0.92, 0.38, 0.05 ).normalize()));
	geometry.faces.push(new THREE.Face3(  63,   50,   62, new THREE.Vector3( -0.92, -0.10, 0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3(  63,   51,   50, new THREE.Vector3( -0.92, -0.10, 0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3(  64,   51,   63, new THREE.Vector3( -0.92, -0.28, 0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  64,   52,   51, new THREE.Vector3( -0.92, -0.28, 0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  65,   52,   64, new THREE.Vector3( -0.92, -0.38, 0.10 ).normalize()));
	geometry.faces.push(new THREE.Face3(  65,   53,   52, new THREE.Vector3( -0.92, -0.38, 0.10 ).normalize()));
	geometry.faces.push(new THREE.Face3(  66,   53,   65, new THREE.Vector3( -0.92, -0.38, -0.10 ).normalize()));
	geometry.faces.push(new THREE.Face3(  66,   54,   53, new THREE.Vector3( -0.92, -0.38, -0.10 ).normalize()));
	geometry.faces.push(new THREE.Face3(  67,   54,   66, new THREE.Vector3( -0.92, -0.28, -0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  67,   55,   54, new THREE.Vector3( -0.92, -0.28, -0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  68,   55,   67, new THREE.Vector3( -0.92, -0.10, -0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3(  68,   56,   55, new THREE.Vector3( -0.92, -0.10, -0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3(  59,   58,   70, new THREE.Vector3( -0.90, 0.42, -0.03 ).normalize()));
	geometry.faces.push(new THREE.Face3(  59,   47,   58, new THREE.Vector3( -0.92, 0.38, -0.05 ).normalize()));
	geometry.faces.push(new THREE.Face3(  59,   72,   60, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  59,   71,   72, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  63,   76,   64, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  63,   75,   76, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  66,   79,   67, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  66,   78,   79, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  70,   71,   59, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  70,   82,   71, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 132,  142,  131, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 132,  143,  142, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 133,  135,  143, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 133,  134,  135, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 136,  138,  143, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 136,  137,  138, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 139,  141,  143, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 139,  140,  141, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   3,   15,    4, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   3,   14,   15, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   5,   17,    6, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   5,   16,   17, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   6,   18,    7, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   6,   17,   18, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   8,   20,    9, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   8,   19,   20, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  50,   61,   62, new THREE.Vector3( -0.90, 0.21, 0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3(  50,   49,   61, new THREE.Vector3( -0.93, 0.14, 0.34 ).normalize()));
	geometry.faces.push(new THREE.Face3(  69,   56,   68, new THREE.Vector3( -0.90, 0.21, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3(  69,   57,   56, new THREE.Vector3( -0.93, 0.14, -0.34 ).normalize()));
	geometry.faces.push(new THREE.Face3(  62,   75,   63, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  62,   74,   75, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  64,   77,   65, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  64,   76,   77, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  65,   78,   66, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  65,   77,   78, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  67,   80,   68, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  67,   79,   80, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 144,  146,  145, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 144,  156,  146, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 146,  148,  147, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 146,  156,  148, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 148,  150,  149, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 148,  156,  150, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 150,  152,  151, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 150,  156,  152, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 152,  154,  153, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 152,  156,  154, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 154,  144,  155, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 154,  156,  144, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   2,   14,    3, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   2,   13,   14, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   9,   21,   10, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   9,   20,   21, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  68,   81,   69, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  68,   80,   81, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  70,   57,   69, new THREE.Vector3( -0.89, 0.41, -0.17 ).normalize()));
	geometry.faces.push(new THREE.Face3(  70,   58,   57, new THREE.Vector3( -0.90, 0.39, -0.17 ).normalize()));
	geometry.faces.push(new THREE.Face3(  61,   74,   62, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  61,   73,   74, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  60,   73,   61, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  60,   72,   73, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  69,   82,   70, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  69,   81,   82, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  60,   49,   48, new THREE.Vector3( -0.90, 0.39, 0.17 ).normalize()));
	geometry.faces.push(new THREE.Face3(  60,   61,   49, new THREE.Vector3( -0.89, 0.41, 0.17 ).normalize()));
	var material = new THREE.MeshLambertMaterial( {color:0x010101} );
	var mesh = new THREE.Mesh( geometry, material );
	var center = new THREE.Vector3( -41.299801, -31.500000, -4.000000 );
	return [mesh,center];
}
