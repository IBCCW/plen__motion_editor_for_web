// name = lower arm r
// verticesNum = 96
// indicesNum = 188
// center = ( -45.250000, -27.000000, -7.300000 )
// length = ( 22.000000, 53.000000, 31.000000 ) 
function initPartsValues17() {
	var geometry = new THREE.Geometry();
	geometry.vertices.push(new THREE.Vector3( -38.2500,  -0.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -52.2500,  -0.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2500,  -0.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -52.2500,  -0.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2500,  -4.5000,   8.2000 ));
	geometry.vertices.push(new THREE.Vector3( -52.2500,  -4.5000,   8.2000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2500, -49.5000,   8.2000 ));
	geometry.vertices.push(new THREE.Vector3( -51.3332, -49.5000,   8.2000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2500, -53.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -48.1882, -53.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2500, -53.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -48.1882, -53.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2500, -49.5000, -22.8000 ));
	geometry.vertices.push(new THREE.Vector3( -51.3332, -49.5000, -22.8000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2500,  -4.5000, -22.8000 ));
	geometry.vertices.push(new THREE.Vector3( -52.2500,  -4.5000, -22.8000 ));
	geometry.vertices.push(new THREE.Vector3( -56.2500,  -4.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -55.3332, -49.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -56.2500,  -4.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -55.3332, -49.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -34.2500, -49.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -34.2500,  -4.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -34.2500, -49.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -34.2500,  -4.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2500,  -1.0359,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -52.2500,  -1.0359,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2500,  -2.5000,   7.6641 ));
	geometry.vertices.push(new THREE.Vector3( -52.2500,  -2.5000,   7.6641 ));
	geometry.vertices.push(new THREE.Vector3( -38.2500, -52.9641,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -48.6096, -52.9641,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2500, -51.5000,   7.6641 ));
	geometry.vertices.push(new THREE.Vector3( -49.7607, -51.5000,   7.6641 ));
	geometry.vertices.push(new THREE.Vector3( -38.2500,  -1.0359, -20.8000 ));
	geometry.vertices.push(new THREE.Vector3( -52.2500,  -1.0359, -20.8000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2500,  -2.5000, -22.2641 ));
	geometry.vertices.push(new THREE.Vector3( -52.2500,  -2.5000, -22.2641 ));
	geometry.vertices.push(new THREE.Vector3( -38.2500, -52.9641, -20.8000 ));
	geometry.vertices.push(new THREE.Vector3( -48.6096, -52.9641, -20.8000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2500, -51.5000, -22.2641 ));
	geometry.vertices.push(new THREE.Vector3( -49.7607, -51.5000, -22.2641 ));
	geometry.vertices.push(new THREE.Vector3( -54.2500,  -1.0359, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -54.2500,  -1.0359,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -55.7141,  -2.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -55.7141,  -2.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -50.6096, -52.9641, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -50.6096, -52.9641,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -53.2248, -51.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -53.2248, -51.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -36.2500,  -1.0359, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -36.2500,  -1.0359,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -34.7859,  -2.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -34.7859,  -2.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -36.2500, -52.9641, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -36.2500, -52.9641,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -34.7859, -51.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -34.7859, -51.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -53.3332, -49.5000,   7.6641 ));
	geometry.vertices.push(new THREE.Vector3( -54.2500,  -4.5000,   7.6641 ));
	geometry.vertices.push(new THREE.Vector3( -54.7973, -49.5000,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -55.7141,  -4.5000,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -53.3332, -49.5000, -22.2641 ));
	geometry.vertices.push(new THREE.Vector3( -54.2500,  -4.5000, -22.2641 ));
	geometry.vertices.push(new THREE.Vector3( -54.7973, -49.5000, -20.8000 ));
	geometry.vertices.push(new THREE.Vector3( -55.7141,  -4.5000, -20.8000 ));
	geometry.vertices.push(new THREE.Vector3( -36.2500, -49.5000,   7.6641 ));
	geometry.vertices.push(new THREE.Vector3( -36.2500,  -4.5000,   7.6641 ));
	geometry.vertices.push(new THREE.Vector3( -34.7859, -49.5000,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -34.7859,  -4.5000,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -36.2500, -49.5000, -22.2641 ));
	geometry.vertices.push(new THREE.Vector3( -36.2500,  -4.5000, -22.2641 ));
	geometry.vertices.push(new THREE.Vector3( -34.7859, -49.5000, -20.8000 ));
	geometry.vertices.push(new THREE.Vector3( -34.7859,  -4.5000, -20.8000 ));
	geometry.vertices.push(new THREE.Vector3( -54.6995,  -2.5000,   6.6495 ));
	geometry.vertices.push(new THREE.Vector3( -35.8005,  -2.5000,   6.6495 ));
	geometry.vertices.push(new THREE.Vector3( -52.2102, -51.5000,   6.6495 ));
	geometry.vertices.push(new THREE.Vector3( -54.6995,  -2.5000, -21.2495 ));
	geometry.vertices.push(new THREE.Vector3( -35.8005, -51.5000,   6.6495 ));
	geometry.vertices.push(new THREE.Vector3( -52.2102, -51.5000, -21.2495 ));
	geometry.vertices.push(new THREE.Vector3( -35.8005,  -2.5000, -21.2495 ));
	geometry.vertices.push(new THREE.Vector3( -35.8005, -51.5000, -21.2495 ));
	geometry.vertices.push(new THREE.Vector3( -52.2500, -46.3181,   8.2000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2500, -46.3181,   8.2000 ));
	geometry.vertices.push(new THREE.Vector3( -54.2500, -46.3181,   7.6641 ));
	geometry.vertices.push(new THREE.Vector3( -36.2500, -46.3181,   7.6641 ));
	geometry.vertices.push(new THREE.Vector3( -55.7141, -46.3181,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -34.7859, -46.3181,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -56.2500, -46.3181,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -34.2500, -46.3181,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -56.2500, -46.3181, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -34.2500, -46.3181, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -55.7141, -46.3181, -20.8000 ));
	geometry.vertices.push(new THREE.Vector3( -34.7859, -46.3181, -20.8000 ));
	geometry.vertices.push(new THREE.Vector3( -54.2500, -46.3181, -22.2641 ));
	geometry.vertices.push(new THREE.Vector3( -36.2500, -46.3181, -22.2641 ));
	geometry.vertices.push(new THREE.Vector3( -52.2500, -46.3181, -22.8000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2500, -46.3181, -22.8000 ));
	geometry.faces.push(new THREE.Face3(  41,   25,    3, new THREE.Vector3( -0.25, 0.94, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  43,   72,   41, new THREE.Vector3( -0.68, 0.68, 0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  25,   41,   72, new THREE.Vector3( -0.41, 0.81, 0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  72,   27,   25, new THREE.Vector3( -0.28, 0.68, 0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  18,   59,   43, new THREE.Vector3( -0.94, 0.25, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  72,   43,   59, new THREE.Vector3( -0.86, 0.36, 0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  59,   57,   72, new THREE.Vector3( -0.69, 0.20, 0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  27,   72,   57, new THREE.Vector3( -0.36, 0.36, 0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  57,    5,   27, new THREE.Vector3( -0.25, 0.25, 0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  49,    2,   24, new THREE.Vector3( 0.25, 0.94, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  51,   49,   73, new THREE.Vector3( 0.68, 0.68, 0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  24,   73,   49, new THREE.Vector3( 0.41, 0.81, 0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  73,   24,   26, new THREE.Vector3( 0.28, 0.68, 0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  23,   51,   67, new THREE.Vector3( 0.94, 0.25, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  73,   67,   51, new THREE.Vector3( 0.86, 0.36, 0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  67,   73,   65, new THREE.Vector3( 0.69, 0.20, 0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  26,   65,   73, new THREE.Vector3( 0.36, 0.36, 0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  65,   26,    4, new THREE.Vector3( 0.25, 0.25, 0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  45,    9,   29, new THREE.Vector3( -0.21, -0.95, 0.21 ).normalize()));
	geometry.faces.push(new THREE.Face3(  47,   45,   74, new THREE.Vector3( -0.48, -0.86, 0.20 ).normalize()));
	geometry.faces.push(new THREE.Face3(  29,   74,   45, new THREE.Vector3( -0.32, -0.89, 0.32 ).normalize()));
	geometry.faces.push(new THREE.Face3(  74,   29,   31, new THREE.Vector3( -0.24, -0.77, 0.58 ).normalize()));
	geometry.faces.push(new THREE.Face3(  19,   47,   58, new THREE.Vector3( -0.68, -0.71, 0.18 ).normalize()));
	geometry.faces.push(new THREE.Face3(  74,   58,   47, new THREE.Vector3( -0.62, -0.74, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  58,   74,   56, new THREE.Vector3( -0.56, -0.60, 0.56 ).normalize()));
	geometry.faces.push(new THREE.Face3(  31,   56,   74, new THREE.Vector3( -0.32, -0.56, 0.76 ).normalize()));
	geometry.faces.push(new THREE.Face3(  56,   31,    7, new THREE.Vector3( -0.23, -0.42, 0.88 ).normalize()));
	geometry.faces.push(new THREE.Face3(  40,    1,   33, new THREE.Vector3( -0.25, 0.94, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  42,   40,   75, new THREE.Vector3( -0.68, 0.68, -0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  33,   75,   40, new THREE.Vector3( -0.41, 0.81, -0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  75,   33,   35, new THREE.Vector3( -0.28, 0.68, -0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  16,   42,   63, new THREE.Vector3( -0.94, 0.25, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  75,   63,   42, new THREE.Vector3( -0.86, 0.36, -0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  63,   75,   61, new THREE.Vector3( -0.69, 0.20, -0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  35,   61,   75, new THREE.Vector3( -0.36, 0.36, -0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  61,   35,   15, new THREE.Vector3( -0.25, 0.25, -0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  53,   28,    8, new THREE.Vector3( 0.25, -0.94, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  55,   76,   53, new THREE.Vector3( 0.68, -0.68, 0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  28,   53,   76, new THREE.Vector3( 0.41, -0.81, 0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  76,   30,   28, new THREE.Vector3( 0.28, -0.68, 0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  22,   66,   55, new THREE.Vector3( 0.94, -0.25, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  76,   55,   66, new THREE.Vector3( 0.86, -0.36, 0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  66,   64,   76, new THREE.Vector3( 0.69, -0.20, 0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  30,   76,   64, new THREE.Vector3( 0.36, -0.36, 0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  64,    6,   30, new THREE.Vector3( 0.25, -0.25, 0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  44,   37,   11, new THREE.Vector3( -0.21, -0.95, -0.21 ).normalize()));
	geometry.faces.push(new THREE.Face3(  46,   77,   44, new THREE.Vector3( -0.48, -0.86, -0.20 ).normalize()));
	geometry.faces.push(new THREE.Face3(  37,   44,   77, new THREE.Vector3( -0.32, -0.89, -0.32 ).normalize()));
	geometry.faces.push(new THREE.Face3(  77,   39,   37, new THREE.Vector3( -0.24, -0.77, -0.58 ).normalize()));
	geometry.faces.push(new THREE.Face3(  17,   62,   46, new THREE.Vector3( -0.68, -0.71, -0.18 ).normalize()));
	geometry.faces.push(new THREE.Face3(  77,   46,   62, new THREE.Vector3( -0.62, -0.74, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  62,   60,   77, new THREE.Vector3( -0.56, -0.60, -0.56 ).normalize()));
	geometry.faces.push(new THREE.Face3(  39,   77,   60, new THREE.Vector3( -0.32, -0.56, -0.76 ).normalize()));
	geometry.faces.push(new THREE.Face3(  60,   13,   39, new THREE.Vector3( -0.23, -0.42, -0.88 ).normalize()));
	geometry.faces.push(new THREE.Face3(  48,   32,    0, new THREE.Vector3( 0.25, 0.94, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  50,   78,   48, new THREE.Vector3( 0.68, 0.68, -0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  32,   48,   78, new THREE.Vector3( 0.41, 0.81, -0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  78,   34,   32, new THREE.Vector3( 0.28, 0.68, -0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  21,   71,   50, new THREE.Vector3( 0.94, 0.25, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  78,   50,   71, new THREE.Vector3( 0.86, 0.36, -0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  71,   69,   78, new THREE.Vector3( 0.69, 0.20, -0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  34,   78,   69, new THREE.Vector3( 0.36, 0.36, -0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  69,   14,   34, new THREE.Vector3( 0.25, 0.25, -0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  52,   10,   36, new THREE.Vector3( 0.25, -0.94, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  54,   52,   79, new THREE.Vector3( 0.68, -0.68, -0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  36,   79,   52, new THREE.Vector3( 0.41, -0.81, -0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  79,   36,   38, new THREE.Vector3( 0.28, -0.68, -0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  20,   54,   70, new THREE.Vector3( 0.94, -0.25, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  79,   70,   54, new THREE.Vector3( 0.86, -0.36, -0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  70,   79,   68, new THREE.Vector3( 0.69, -0.20, -0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  38,   68,   79, new THREE.Vector3( 0.36, -0.36, -0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  68,   38,   12, new THREE.Vector3( 0.25, -0.25, -0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(   8,   11,   10, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   8,    9,   11, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   0,    3,    2, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   0,    1,    3, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  32,    1,    0, new THREE.Vector3( 0.00, 0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  32,   33,    1, new THREE.Vector3( 0.00, 0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  37,   10,   11, new THREE.Vector3( 0.00, -0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  37,   36,   10, new THREE.Vector3( 0.00, -0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  33,   34,   35, new THREE.Vector3( 0.00, 0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  33,   32,   34, new THREE.Vector3( 0.00, 0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  36,   39,   38, new THREE.Vector3( 0.00, -0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  36,   37,   39, new THREE.Vector3( 0.00, -0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  45,   11,    9, new THREE.Vector3( -0.22, -0.98, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  45,   44,   11, new THREE.Vector3( -0.22, -0.98, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   3,   40,   41, new THREE.Vector3( -0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   3,    1,   40, new THREE.Vector3( -0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  14,   35,   34, new THREE.Vector3( 0.00, 0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  14,   15,   35, new THREE.Vector3( 0.00, 0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  26,    5,    4, new THREE.Vector3( 0.00, 0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  26,   27,    5, new THREE.Vector3( 0.00, 0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  27,   24,   25, new THREE.Vector3( 0.00, 0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  27,   26,   24, new THREE.Vector3( 0.00, 0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  25,    2,    3, new THREE.Vector3( 0.00, 0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  25,   24,    2, new THREE.Vector3( 0.00, 0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  16,   43,   42, new THREE.Vector3( -0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  16,   18,   43, new THREE.Vector3( -0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  50,   23,   21, new THREE.Vector3( 0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  50,   51,   23, new THREE.Vector3( 0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  51,   48,   49, new THREE.Vector3( 0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  51,   50,   48, new THREE.Vector3( 0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  42,   41,   40, new THREE.Vector3( -0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  42,   43,   41, new THREE.Vector3( -0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  49,    0,    2, new THREE.Vector3( 0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  49,   48,    0, new THREE.Vector3( 0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  28,    9,    8, new THREE.Vector3( 0.00, -0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  28,   29,    9, new THREE.Vector3( 0.00, -0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  52,    8,   10, new THREE.Vector3( 0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  52,   53,    8, new THREE.Vector3( 0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  54,   53,   52, new THREE.Vector3( 0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  54,   55,   53, new THREE.Vector3( 0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  44,   47,   46, new THREE.Vector3( -0.49, -0.87, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  44,   45,   47, new THREE.Vector3( -0.49, -0.87, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  13,   38,   39, new THREE.Vector3( 0.00, -0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  13,   12,   38, new THREE.Vector3( 0.00, -0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  55,   20,   22, new THREE.Vector3( 0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  55,   54,   20, new THREE.Vector3( 0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  19,   46,   47, new THREE.Vector3( -0.69, -0.73, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  19,   17,   46, new THREE.Vector3( -0.69, -0.73, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   6,   31,   30, new THREE.Vector3( 0.00, -0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(   6,    7,   31, new THREE.Vector3( 0.00, -0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  30,   29,   28, new THREE.Vector3( 0.00, -0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  30,   31,   29, new THREE.Vector3( 0.00, -0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  81,    7,    6, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  81,   80,    7, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   5,   81,    4, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   5,   80,   81, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  82,    5,   57, new THREE.Vector3( -0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  82,   80,    5, new THREE.Vector3( -0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(   7,   82,   56, new THREE.Vector3( -0.26, -0.07, 0.96 ).normalize()));
	geometry.faces.push(new THREE.Face3(   7,   80,   82, new THREE.Vector3( -0.26, -0.07, 0.96 ).normalize()));
	geometry.faces.push(new THREE.Face3(  83,    6,   64, new THREE.Vector3( 0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  83,   81,    6, new THREE.Vector3( 0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(   4,   83,   65, new THREE.Vector3( 0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(   4,   81,   83, new THREE.Vector3( 0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  84,   57,   59, new THREE.Vector3( -0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  84,   82,   57, new THREE.Vector3( -0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  56,   84,   58, new THREE.Vector3( -0.69, -0.20, 0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  56,   82,   84, new THREE.Vector3( -0.69, -0.20, 0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  85,   64,   66, new THREE.Vector3( 0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  85,   83,   64, new THREE.Vector3( 0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  65,   85,   67, new THREE.Vector3( 0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  65,   83,   85, new THREE.Vector3( 0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  86,   59,   18, new THREE.Vector3( -0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  86,   84,   59, new THREE.Vector3( -0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  58,   86,   19, new THREE.Vector3( -0.93, -0.27, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  58,   84,   86, new THREE.Vector3( -0.93, -0.27, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  87,   66,   22, new THREE.Vector3( 0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  87,   85,   66, new THREE.Vector3( 0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  67,   87,   23, new THREE.Vector3( 0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  67,   85,   87, new THREE.Vector3( 0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  88,   18,   16, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  88,   86,   18, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  19,   88,   17, new THREE.Vector3( -0.96, -0.28, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  19,   86,   88, new THREE.Vector3( -0.96, -0.28, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  89,   22,   20, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  89,   87,   22, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  23,   89,   21, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  23,   87,   89, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  90,   16,   63, new THREE.Vector3( -0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  90,   88,   16, new THREE.Vector3( -0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  17,   90,   62, new THREE.Vector3( -0.93, -0.27, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  17,   88,   90, new THREE.Vector3( -0.93, -0.27, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  91,   20,   70, new THREE.Vector3( 0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  91,   89,   20, new THREE.Vector3( 0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  21,   91,   71, new THREE.Vector3( 0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  21,   89,   91, new THREE.Vector3( 0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  92,   63,   61, new THREE.Vector3( -0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  92,   90,   63, new THREE.Vector3( -0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  62,   92,   60, new THREE.Vector3( -0.69, -0.20, -0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  62,   90,   92, new THREE.Vector3( -0.69, -0.20, -0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  93,   70,   68, new THREE.Vector3( 0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  93,   91,   70, new THREE.Vector3( 0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  71,   93,   69, new THREE.Vector3( 0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  71,   91,   93, new THREE.Vector3( 0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  94,   61,   15, new THREE.Vector3( -0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  94,   92,   61, new THREE.Vector3( -0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  60,   94,   13, new THREE.Vector3( -0.26, -0.07, -0.96 ).normalize()));
	geometry.faces.push(new THREE.Face3(  60,   92,   94, new THREE.Vector3( -0.26, -0.07, -0.96 ).normalize()));
	geometry.faces.push(new THREE.Face3(  95,   68,   12, new THREE.Vector3( 0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  95,   93,   68, new THREE.Vector3( 0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  69,   95,   14, new THREE.Vector3( 0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  69,   93,   95, new THREE.Vector3( 0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  95,   15,   14, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  95,   94,   15, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  13,   95,   12, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  13,   94,   95, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	var material = new THREE.MeshLambertMaterial( {color:0xF1F1F1} );
	var mesh = new THREE.Mesh( geometry, material );
	var center = new THREE.Vector3( -45.250000, -27.000000, -7.300000 );
	return [mesh,center];
}
