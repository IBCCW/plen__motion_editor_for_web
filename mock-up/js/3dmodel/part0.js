// name = head
// verticesNum = 96
// indicesNum = 188
// center = ( 0.000000, 79.000000, -7.500000 )
// length = ( 40.000000, 35.000000, 40.000000 ) 
function initPartsValues0() {
	var geometry = new THREE.Geometry();
	geometry.vertices.push(new THREE.Vector3( -15.0000,  96.5000, -22.5000 ));
	geometry.vertices.push(new THREE.Vector3(  15.0000,  96.5000, -22.5000 ));
	geometry.vertices.push(new THREE.Vector3( -15.0000,  96.5000,   5.2487 ));
	geometry.vertices.push(new THREE.Vector3(  15.0000,  96.5000,   5.2487 ));
	geometry.vertices.push(new THREE.Vector3( -15.0000,  91.5000,  11.4372 ));
	geometry.vertices.push(new THREE.Vector3(  15.0000,  91.5000,  11.4372 ));
	geometry.vertices.push(new THREE.Vector3( -15.0000,  66.5000,  12.5000 ));
	geometry.vertices.push(new THREE.Vector3(  15.0000,  66.5000,  12.5000 ));
	geometry.vertices.push(new THREE.Vector3( -15.0000,  61.5000,   7.5000 ));
	geometry.vertices.push(new THREE.Vector3(  15.0000,  61.5000,   7.5000 ));
	geometry.vertices.push(new THREE.Vector3( -15.0000,  61.5000, -22.5000 ));
	geometry.vertices.push(new THREE.Vector3(  15.0000,  61.5000, -22.5000 ));
	geometry.vertices.push(new THREE.Vector3( -15.0000,  66.5000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  15.0000,  66.5000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -15.0000,  91.5000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  15.0000,  91.5000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3(  20.0000,  91.5000, -22.5000 ));
	geometry.vertices.push(new THREE.Vector3(  20.0000,  66.5000, -22.5000 ));
	geometry.vertices.push(new THREE.Vector3(  20.0000,  91.5000,   6.4372 ));
	geometry.vertices.push(new THREE.Vector3(  20.0000,  66.5000,   7.5000 ));
	geometry.vertices.push(new THREE.Vector3( -20.0000,  66.5000, -22.5000 ));
	geometry.vertices.push(new THREE.Vector3( -20.0000,  91.5000, -22.5000 ));
	geometry.vertices.push(new THREE.Vector3( -20.0000,  66.5000,   7.5000 ));
	geometry.vertices.push(new THREE.Vector3( -20.0000,  91.5000,   6.4372 ));
	geometry.vertices.push(new THREE.Vector3( -15.0000,  95.8301,   7.9079 ));
	geometry.vertices.push(new THREE.Vector3(  15.0000,  95.8301,   7.9079 ));
	geometry.vertices.push(new THREE.Vector3( -15.0000,  94.0000,  10.1730 ));
	geometry.vertices.push(new THREE.Vector3(  15.0000,  94.0000,  10.1730 ));
	geometry.vertices.push(new THREE.Vector3( -15.0000,  62.1699,  10.0000 ));
	geometry.vertices.push(new THREE.Vector3(  15.0000,  62.1699,  10.0000 ));
	geometry.vertices.push(new THREE.Vector3( -15.0000,  64.0000,  11.8301 ));
	geometry.vertices.push(new THREE.Vector3(  15.0000,  64.0000,  11.8301 ));
	geometry.vertices.push(new THREE.Vector3( -15.0000,  95.8301, -25.0000 ));
	geometry.vertices.push(new THREE.Vector3(  15.0000,  95.8301, -25.0000 ));
	geometry.vertices.push(new THREE.Vector3( -15.0000,  94.0000, -26.8301 ));
	geometry.vertices.push(new THREE.Vector3(  15.0000,  94.0000, -26.8301 ));
	geometry.vertices.push(new THREE.Vector3( -15.0000,  62.1699, -25.0000 ));
	geometry.vertices.push(new THREE.Vector3(  15.0000,  62.1699, -25.0000 ));
	geometry.vertices.push(new THREE.Vector3( -15.0000,  64.0000, -26.8301 ));
	geometry.vertices.push(new THREE.Vector3(  15.0000,  64.0000, -26.8301 ));
	geometry.vertices.push(new THREE.Vector3(  17.5000,  95.8301, -22.5000 ));
	geometry.vertices.push(new THREE.Vector3(  17.5000,  95.8301,   5.4079 ));
	geometry.vertices.push(new THREE.Vector3(  19.3301,  94.0000, -22.5000 ));
	geometry.vertices.push(new THREE.Vector3(  19.3301,  94.0000,   5.8429 ));
	geometry.vertices.push(new THREE.Vector3(  17.5000,  62.1699, -22.5000 ));
	geometry.vertices.push(new THREE.Vector3(  17.5000,  62.1699,   7.5000 ));
	geometry.vertices.push(new THREE.Vector3(  19.3301,  64.0000, -22.5000 ));
	geometry.vertices.push(new THREE.Vector3(  19.3301,  64.0000,   7.5000 ));
	geometry.vertices.push(new THREE.Vector3( -17.5000,  95.8301, -22.5000 ));
	geometry.vertices.push(new THREE.Vector3( -17.5000,  95.8301,   5.4079 ));
	geometry.vertices.push(new THREE.Vector3( -19.3301,  94.0000, -22.5000 ));
	geometry.vertices.push(new THREE.Vector3( -19.3301,  94.0000,   5.8429 ));
	geometry.vertices.push(new THREE.Vector3( -17.5000,  62.1699, -22.5000 ));
	geometry.vertices.push(new THREE.Vector3( -17.5000,  62.1699,   7.5000 ));
	geometry.vertices.push(new THREE.Vector3( -19.3301,  64.0000, -22.5000 ));
	geometry.vertices.push(new THREE.Vector3( -19.3301,  64.0000,   7.5000 ));
	geometry.vertices.push(new THREE.Vector3(  17.5000,  66.5000,  11.8301 ));
	geometry.vertices.push(new THREE.Vector3(  17.5000,  91.5000,  10.7673 ));
	geometry.vertices.push(new THREE.Vector3(  19.3301,  66.5000,  10.0000 ));
	geometry.vertices.push(new THREE.Vector3(  19.3301,  91.5000,   8.9372 ));
	geometry.vertices.push(new THREE.Vector3(  17.5000,  66.5000, -26.8301 ));
	geometry.vertices.push(new THREE.Vector3(  17.5000,  91.5000, -26.8301 ));
	geometry.vertices.push(new THREE.Vector3(  19.3301,  66.5000, -25.0000 ));
	geometry.vertices.push(new THREE.Vector3(  19.3301,  91.5000, -25.0000 ));
	geometry.vertices.push(new THREE.Vector3( -17.5000,  66.5000,  11.8301 ));
	geometry.vertices.push(new THREE.Vector3( -17.5000,  91.5000,  10.7673 ));
	geometry.vertices.push(new THREE.Vector3( -19.3301,  66.5000,  10.0000 ));
	geometry.vertices.push(new THREE.Vector3( -19.3301,  91.5000,   8.9372 ));
	geometry.vertices.push(new THREE.Vector3( -17.5000,  66.5000, -26.8301 ));
	geometry.vertices.push(new THREE.Vector3( -17.5000,  91.5000, -26.8301 ));
	geometry.vertices.push(new THREE.Vector3( -19.3301,  66.5000, -25.0000 ));
	geometry.vertices.push(new THREE.Vector3( -19.3301,  91.5000, -25.0000 ));
	geometry.vertices.push(new THREE.Vector3(  18.0619,  94.0000,   8.9048 ));
	geometry.vertices.push(new THREE.Vector3( -18.0619,  94.0000,   8.9048 ));
	geometry.vertices.push(new THREE.Vector3(  18.0619,  64.0000,  10.5619 ));
	geometry.vertices.push(new THREE.Vector3(  18.0619,  94.0000, -25.5619 ));
	geometry.vertices.push(new THREE.Vector3( -18.0619,  64.0000,  10.5619 ));
	geometry.vertices.push(new THREE.Vector3(  18.0619,  64.0000, -25.5619 ));
	geometry.vertices.push(new THREE.Vector3( -18.0619,  94.0000, -25.5619 ));
	geometry.vertices.push(new THREE.Vector3( -18.0619,  64.0000, -25.5619 ));
	geometry.vertices.push(new THREE.Vector3(  20.0000,  87.1826,   7.4634 ));
	geometry.vertices.push(new THREE.Vector3(  20.0000,  87.1826, -22.5000 ));
	geometry.vertices.push(new THREE.Vector3(  19.3301,  87.1826,   9.9634 ));
	geometry.vertices.push(new THREE.Vector3(  19.3301,  87.1826, -25.0000 ));
	geometry.vertices.push(new THREE.Vector3(  17.5000,  87.1826,  11.7935 ));
	geometry.vertices.push(new THREE.Vector3(  17.5000,  87.1826, -26.8301 ));
	geometry.vertices.push(new THREE.Vector3(  15.0000,  87.1826,  12.4634 ));
	geometry.vertices.push(new THREE.Vector3(  15.0000,  87.1826, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -15.0000,  87.1826,  12.4634 ));
	geometry.vertices.push(new THREE.Vector3( -15.0000,  87.1826, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -17.5000,  87.1826,  11.7935 ));
	geometry.vertices.push(new THREE.Vector3( -17.5000,  87.1826, -26.8301 ));
	geometry.vertices.push(new THREE.Vector3( -19.3301,  87.1826,   9.9634 ));
	geometry.vertices.push(new THREE.Vector3( -19.3301,  87.1826, -25.0000 ));
	geometry.vertices.push(new THREE.Vector3( -20.0000,  87.1826,   7.4634 ));
	geometry.vertices.push(new THREE.Vector3( -20.0000,  87.1826, -22.5000 ));
	geometry.faces.push(new THREE.Face3(  72,   43,   41, new THREE.Vector3( 0.65, 0.71, 0.27 ).normalize()));
	geometry.faces.push(new THREE.Face3(  27,   72,   25, new THREE.Vector3( 0.25, 0.75, 0.61 ).normalize()));
	geometry.faces.push(new THREE.Face3(  57,   59,   72, new THREE.Vector3( 0.66, 0.35, 0.66 ).normalize()));
	geometry.faces.push(new THREE.Face3(  49,   51,   73, new THREE.Vector3( -0.65, 0.71, 0.27 ).normalize()));
	geometry.faces.push(new THREE.Face3(  24,   73,   26, new THREE.Vector3( -0.25, 0.75, 0.61 ).normalize()));
	geometry.faces.push(new THREE.Face3(  73,   67,   65, new THREE.Vector3( -0.66, 0.35, 0.66 ).normalize()));
	geometry.faces.push(new THREE.Face3(  45,   47,   74, new THREE.Vector3( 0.68, -0.68, 0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  29,   74,   31, new THREE.Vector3( 0.28, -0.68, 0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  74,   58,   56, new THREE.Vector3( 0.69, -0.20, 0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  40,   42,   75, new THREE.Vector3( 0.68, 0.68, -0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  33,   75,   35, new THREE.Vector3( 0.28, 0.68, -0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  75,   63,   61, new THREE.Vector3( 0.69, 0.20, -0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  76,   55,   53, new THREE.Vector3( -0.68, -0.68, 0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  30,   76,   28, new THREE.Vector3( -0.28, -0.68, 0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  64,   66,   76, new THREE.Vector3( -0.69, -0.20, 0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  77,   46,   44, new THREE.Vector3( 0.68, -0.68, -0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  39,   77,   37, new THREE.Vector3( 0.28, -0.68, -0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  60,   62,   77, new THREE.Vector3( 0.69, -0.20, -0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  78,   50,   48, new THREE.Vector3( -0.68, 0.68, -0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  34,   78,   32, new THREE.Vector3( -0.28, 0.68, -0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  69,   71,   78, new THREE.Vector3( -0.69, 0.20, -0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  52,   54,   79, new THREE.Vector3( -0.68, -0.68, -0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  36,   79,   38, new THREE.Vector3( -0.28, -0.68, -0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  79,   70,   68, new THREE.Vector3( -0.69, -0.20, -0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  24,    3,    2, new THREE.Vector3( 0.00, 0.97, 0.24 ).normalize()));
	geometry.faces.push(new THREE.Face3(  24,   25,    3, new THREE.Vector3( 0.00, 0.97, 0.24 ).normalize()));
	geometry.faces.push(new THREE.Face3(  26,   25,   24, new THREE.Vector3( 0.00, 0.78, 0.63 ).normalize()));
	geometry.faces.push(new THREE.Face3(  26,   27,   25, new THREE.Vector3( 0.00, 0.78, 0.63 ).normalize()));
	geometry.faces.push(new THREE.Face3(   4,   27,   26, new THREE.Vector3( 0.00, 0.45, 0.89 ).normalize()));
	geometry.faces.push(new THREE.Face3(   4,    5,   27, new THREE.Vector3( 0.00, 0.45, 0.89 ).normalize()));
	geometry.faces.push(new THREE.Face3(   8,   29,   28, new THREE.Vector3( 0.00, -0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(   8,    9,   29, new THREE.Vector3( 0.00, -0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  28,   31,   30, new THREE.Vector3( 0.00, -0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  28,   29,   31, new THREE.Vector3( 0.00, -0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  30,    7,    6, new THREE.Vector3( 0.00, -0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  30,   31,    7, new THREE.Vector3( 0.00, -0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(   0,   33,   32, new THREE.Vector3( 0.00, 0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(   0,    1,   33, new THREE.Vector3( 0.00, 0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  32,   35,   34, new THREE.Vector3( 0.00, 0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  32,   33,   35, new THREE.Vector3( 0.00, 0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  34,   15,   14, new THREE.Vector3( 0.00, 0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  34,   35,   15, new THREE.Vector3( 0.00, 0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  36,   11,   10, new THREE.Vector3( 0.00, -0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  36,   37,   11, new THREE.Vector3( 0.00, -0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  38,   37,   36, new THREE.Vector3( 0.00, -0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  38,   39,   37, new THREE.Vector3( 0.00, -0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  12,   39,   38, new THREE.Vector3( 0.00, -0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  12,   13,   39, new THREE.Vector3( 0.00, -0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  25,   41,    3, new THREE.Vector3( 0.24, 0.94, 0.24 ).normalize()));
	geometry.faces.push(new THREE.Face3(  25,   72,   41, new THREE.Vector3( 0.38, 0.84, 0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3(  57,   27,    5, new THREE.Vector3( 0.23, 0.44, 0.87 ).normalize()));
	geometry.faces.push(new THREE.Face3(  57,   72,   27, new THREE.Vector3( 0.33, 0.52, 0.79 ).normalize()));
	geometry.faces.push(new THREE.Face3(  59,   43,   72, new THREE.Vector3( 0.83, 0.43, 0.35 ).normalize()));
	geometry.faces.push(new THREE.Face3(  59,   18,   43, new THREE.Vector3( 0.92, 0.31, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  42,   63,   75, new THREE.Vector3( 0.86, 0.36, -0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  42,   16,   63, new THREE.Vector3( 0.94, 0.25, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  33,   40,   75, new THREE.Vector3( 0.41, 0.81, -0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  33,    1,   40, new THREE.Vector3( 0.25, 0.94, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  61,   35,   75, new THREE.Vector3( 0.36, 0.36, -0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  61,   15,   35, new THREE.Vector3( 0.25, 0.25, -0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  46,   62,   17, new THREE.Vector3( 0.94, -0.25, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  46,   77,   62, new THREE.Vector3( 0.86, -0.36, -0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  37,   44,   11, new THREE.Vector3( 0.25, -0.94, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  37,   77,   44, new THREE.Vector3( 0.41, -0.81, -0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  60,   39,   13, new THREE.Vector3( 0.25, -0.25, -0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  60,   77,   39, new THREE.Vector3( 0.36, -0.36, -0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  68,   38,   79, new THREE.Vector3( -0.36, -0.36, -0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  68,   12,   38, new THREE.Vector3( -0.25, -0.25, -0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  52,   36,   10, new THREE.Vector3( -0.25, -0.94, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  52,   79,   36, new THREE.Vector3( -0.41, -0.81, -0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  70,   54,   20, new THREE.Vector3( -0.94, -0.25, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  70,   79,   54, new THREE.Vector3( -0.86, -0.36, -0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  53,   28,   76, new THREE.Vector3( -0.41, -0.81, 0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  53,    8,   28, new THREE.Vector3( -0.25, -0.94, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  66,   55,   76, new THREE.Vector3( -0.86, -0.36, 0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  66,   22,   55, new THREE.Vector3( -0.94, -0.25, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  30,   64,   76, new THREE.Vector3( -0.36, -0.36, 0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  30,    6,   64, new THREE.Vector3( -0.25, -0.25, 0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  56,   31,   74, new THREE.Vector3( 0.36, -0.36, 0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  56,    7,   31, new THREE.Vector3( 0.25, -0.25, 0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  47,   58,   74, new THREE.Vector3( 0.86, -0.36, 0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  47,   19,   58, new THREE.Vector3( 0.94, -0.25, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  29,   45,   74, new THREE.Vector3( 0.41, -0.81, 0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  29,    9,   45, new THREE.Vector3( 0.25, -0.94, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  24,   49,   73, new THREE.Vector3( -0.38, 0.84, 0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3(  24,    2,   49, new THREE.Vector3( -0.24, 0.94, 0.24 ).normalize()));
	geometry.faces.push(new THREE.Face3(  65,   26,   73, new THREE.Vector3( -0.33, 0.52, 0.79 ).normalize()));
	geometry.faces.push(new THREE.Face3(  65,    4,   26, new THREE.Vector3( -0.23, 0.44, 0.87 ).normalize()));
	geometry.faces.push(new THREE.Face3(  51,   67,   73, new THREE.Vector3( -0.83, 0.43, 0.35 ).normalize()));
	geometry.faces.push(new THREE.Face3(  51,   23,   67, new THREE.Vector3( -0.92, 0.31, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  50,   71,   21, new THREE.Vector3( -0.94, 0.25, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  50,   78,   71, new THREE.Vector3( -0.86, 0.36, -0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  32,   48,    0, new THREE.Vector3( -0.25, 0.94, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  32,   78,   48, new THREE.Vector3( -0.41, 0.81, -0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  69,   34,   14, new THREE.Vector3( -0.25, 0.25, -0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  69,   78,   34, new THREE.Vector3( -0.36, 0.36, -0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  80,   58,   19, new THREE.Vector3( 0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  80,   82,   58, new THREE.Vector3( 0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  80,   59,   82, new THREE.Vector3( 0.96, 0.06, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  80,   18,   59, new THREE.Vector3( 0.96, 0.06, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  81,   63,   16, new THREE.Vector3( 0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  81,   83,   63, new THREE.Vector3( 0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  81,   62,   83, new THREE.Vector3( 0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  81,   17,   62, new THREE.Vector3( 0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  82,   56,   58, new THREE.Vector3( 0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  82,   84,   56, new THREE.Vector3( 0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  82,   57,   84, new THREE.Vector3( 0.70, 0.17, 0.70 ).normalize()));
	geometry.faces.push(new THREE.Face3(  82,   59,   57, new THREE.Vector3( 0.70, 0.17, 0.70 ).normalize()));
	geometry.faces.push(new THREE.Face3(  83,   61,   63, new THREE.Vector3( 0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  83,   85,   61, new THREE.Vector3( 0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  83,   60,   85, new THREE.Vector3( 0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  83,   62,   60, new THREE.Vector3( 0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  84,    7,   56, new THREE.Vector3( 0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  84,   86,    7, new THREE.Vector3( 0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  84,    5,   86, new THREE.Vector3( 0.25, 0.22, 0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  84,   57,    5, new THREE.Vector3( 0.25, 0.22, 0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  85,   15,   61, new THREE.Vector3( 0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  85,   87,   15, new THREE.Vector3( 0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  85,   13,   87, new THREE.Vector3( 0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  85,   60,   13, new THREE.Vector3( 0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  86,    6,    7, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  86,   88,    6, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  86,    4,   88, new THREE.Vector3( 0.00, 0.23, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  86,    5,    4, new THREE.Vector3( 0.00, 0.23, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  87,   14,   15, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  87,   89,   14, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  87,   12,   89, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  87,   13,   12, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  88,   64,    6, new THREE.Vector3( -0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  88,   90,   64, new THREE.Vector3( -0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  88,   65,   90, new THREE.Vector3( -0.25, 0.22, 0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  88,    4,   65, new THREE.Vector3( -0.25, 0.22, 0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  89,   69,   14, new THREE.Vector3( -0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  89,   91,   69, new THREE.Vector3( -0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  89,   68,   91, new THREE.Vector3( -0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  89,   12,   68, new THREE.Vector3( -0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  90,   66,   64, new THREE.Vector3( -0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  90,   92,   66, new THREE.Vector3( -0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  90,   67,   92, new THREE.Vector3( -0.70, 0.17, 0.70 ).normalize()));
	geometry.faces.push(new THREE.Face3(  90,   65,   67, new THREE.Vector3( -0.70, 0.17, 0.70 ).normalize()));
	geometry.faces.push(new THREE.Face3(  91,   71,   69, new THREE.Vector3( -0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  91,   93,   71, new THREE.Vector3( -0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  91,   70,   93, new THREE.Vector3( -0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  91,   68,   70, new THREE.Vector3( -0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  92,   22,   66, new THREE.Vector3( -0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  92,   94,   22, new THREE.Vector3( -0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  92,   23,   94, new THREE.Vector3( -0.96, 0.06, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  92,   67,   23, new THREE.Vector3( -0.96, 0.06, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  93,   21,   71, new THREE.Vector3( -0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  93,   95,   21, new THREE.Vector3( -0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  93,   20,   95, new THREE.Vector3( -0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  93,   70,   20, new THREE.Vector3( -0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  16,   80,   81, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  16,   18,   80, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  18,   42,   43, new THREE.Vector3( 0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  18,   16,   42, new THREE.Vector3( 0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  81,   19,   17, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  81,   80,   19, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  43,   40,   41, new THREE.Vector3( 0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  43,   42,   40, new THREE.Vector3( 0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  17,   47,   46, new THREE.Vector3( 0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  17,   19,   47, new THREE.Vector3( 0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  41,    1,    3, new THREE.Vector3( 0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  41,   40,    1, new THREE.Vector3( 0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  46,   45,   44, new THREE.Vector3( 0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  46,   47,   45, new THREE.Vector3( 0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   3,    0,    2, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   3,    1,    0, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  44,    9,   11, new THREE.Vector3( 0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  44,   45,    9, new THREE.Vector3( 0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   2,   48,   49, new THREE.Vector3( -0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   2,    0,   48, new THREE.Vector3( -0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  11,    8,   10, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  11,    9,    8, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  49,   50,   51, new THREE.Vector3( -0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  49,   48,   50, new THREE.Vector3( -0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  10,   53,   52, new THREE.Vector3( -0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  10,    8,   53, new THREE.Vector3( -0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  51,   21,   23, new THREE.Vector3( -0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  51,   50,   21, new THREE.Vector3( -0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  52,   55,   54, new THREE.Vector3( -0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  52,   53,   55, new THREE.Vector3( -0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  23,   95,   94, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  23,   21,   95, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  54,   22,   20, new THREE.Vector3( -0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  54,   55,   22, new THREE.Vector3( -0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  94,   20,   22, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  94,   95,   20, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	var material = new THREE.MeshLambertMaterial( {color:0xF1F1F1} );
	var mesh = new THREE.Mesh( geometry, material );
	var center = new THREE.Vector3( 0.000000, 79.000000, -7.500000 );
	return [mesh,center];
}
