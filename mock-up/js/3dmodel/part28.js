// name = horn thigh roll r
// verticesNum = 97
// indicesNum = 190
// center = ( -19.500099, -17.500000, -27.799999 )
// length = ( 11.999999, 16.000000, 4.600000 ) 
function initPartsValues28() {
	var geometry = new THREE.Geometry();
	geometry.vertices.push(new THREE.Vector3( -14.7001, -17.5000, -29.5000 ));
	geometry.vertices.push(new THREE.Vector3( -15.0752, -16.1000, -29.5000 ));
	geometry.vertices.push(new THREE.Vector3( -16.1001, -15.0751, -29.5000 ));
	geometry.vertices.push(new THREE.Vector3( -17.5001, -14.7000, -29.5000 ));
	geometry.vertices.push(new THREE.Vector3( -18.9001, -15.0751, -29.5000 ));
	geometry.vertices.push(new THREE.Vector3( -19.9250, -16.1000, -29.5000 ));
	geometry.vertices.push(new THREE.Vector3( -20.3001, -17.5000, -29.5000 ));
	geometry.vertices.push(new THREE.Vector3( -19.9250, -18.9000, -29.5000 ));
	geometry.vertices.push(new THREE.Vector3( -18.9001, -19.9249, -29.5000 ));
	geometry.vertices.push(new THREE.Vector3( -17.5001, -20.3000, -29.5000 ));
	geometry.vertices.push(new THREE.Vector3( -16.1001, -19.9249, -29.5000 ));
	geometry.vertices.push(new THREE.Vector3( -15.0752, -18.9000, -29.5000 ));
	geometry.vertices.push(new THREE.Vector3( -14.7001, -17.5000, -30.1000 ));
	geometry.vertices.push(new THREE.Vector3( -15.0752, -16.1000, -30.1000 ));
	geometry.vertices.push(new THREE.Vector3( -16.1001, -15.0751, -30.1000 ));
	geometry.vertices.push(new THREE.Vector3( -17.5001, -14.7000, -30.1000 ));
	geometry.vertices.push(new THREE.Vector3( -18.9001, -15.0751, -30.1000 ));
	geometry.vertices.push(new THREE.Vector3( -19.9250, -16.1000, -30.1000 ));
	geometry.vertices.push(new THREE.Vector3( -20.3001, -17.5000, -30.1000 ));
	geometry.vertices.push(new THREE.Vector3( -19.9250, -18.9000, -30.1000 ));
	geometry.vertices.push(new THREE.Vector3( -18.9001, -19.9249, -30.1000 ));
	geometry.vertices.push(new THREE.Vector3( -17.5001, -20.3000, -30.1000 ));
	geometry.vertices.push(new THREE.Vector3( -16.1001, -19.9249, -30.1000 ));
	geometry.vertices.push(new THREE.Vector3( -15.0752, -18.9000, -30.1000 ));
	geometry.vertices.push(new THREE.Vector3( -13.5001, -17.5000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -14.0360, -15.5000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -15.5001, -14.0359, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -17.5001, -13.5000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -19.5001, -14.0359, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -20.9642, -15.5000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -21.5001, -17.5000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -20.9642, -19.5000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -19.5001, -20.9641, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -17.5001, -21.5000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -15.5001, -20.9641, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -14.0360, -19.5000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -13.7477, -15.8372, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -16.2691,  -9.9587, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -17.5001,  -9.5000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -21.5001, -10.5718, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -24.4283, -13.5000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -25.5001, -17.5000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -24.4283, -21.5000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -21.5001, -24.4282, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -17.5001, -25.5000, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -16.2691, -25.0413, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -13.7477, -19.1628, -27.5000 ));
	geometry.vertices.push(new THREE.Vector3( -13.5001, -17.5000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3( -14.0360, -15.5000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3( -15.5001, -14.0359, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3( -17.5001, -13.5000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3( -19.5001, -14.0359, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3( -20.9642, -15.5000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3( -21.5001, -17.5000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3( -20.9642, -19.5000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3( -19.5001, -20.9641, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3( -17.5001, -21.5000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3( -15.5001, -20.9641, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3( -14.0360, -19.5000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3( -17.5001, -17.5000, -25.5000 ));
	geometry.vertices.push(new THREE.Vector3( -17.5001, -17.5000, -30.1000 ));
	geometry.vertices.push(new THREE.Vector3( -13.5001, -17.5000, -28.5000 ));
	geometry.vertices.push(new THREE.Vector3( -13.7477, -15.8372, -28.5000 ));
	geometry.vertices.push(new THREE.Vector3( -16.2691,  -9.9587, -28.5000 ));
	geometry.vertices.push(new THREE.Vector3( -17.5001,  -9.5000, -28.5000 ));
	geometry.vertices.push(new THREE.Vector3( -21.5001, -10.5718, -28.5000 ));
	geometry.vertices.push(new THREE.Vector3( -24.4283, -13.5000, -28.5000 ));
	geometry.vertices.push(new THREE.Vector3( -25.5001, -17.5000, -28.5000 ));
	geometry.vertices.push(new THREE.Vector3( -24.4283, -21.5000, -28.5000 ));
	geometry.vertices.push(new THREE.Vector3( -21.5001, -24.4282, -28.5000 ));
	geometry.vertices.push(new THREE.Vector3( -17.5001, -25.5000, -28.5000 ));
	geometry.vertices.push(new THREE.Vector3( -16.2691, -25.0413, -28.5000 ));
	geometry.vertices.push(new THREE.Vector3( -13.7477, -19.1628, -28.5000 ));
	geometry.vertices.push(new THREE.Vector3( -14.0014, -15.8981, -29.2071 ));
	geometry.vertices.push(new THREE.Vector3( -16.4155, -10.2348, -29.2071 ));
	geometry.vertices.push(new THREE.Vector3( -17.5001,  -9.7929, -29.2071 ));
	geometry.vertices.push(new THREE.Vector3( -21.3537, -10.8254, -29.2071 ));
	geometry.vertices.push(new THREE.Vector3( -24.1747, -13.6464, -29.2071 ));
	geometry.vertices.push(new THREE.Vector3( -25.2072, -17.5000, -29.2071 ));
	geometry.vertices.push(new THREE.Vector3( -24.1747, -21.3536, -29.2071 ));
	geometry.vertices.push(new THREE.Vector3( -21.3537, -24.1745, -29.2071 ));
	geometry.vertices.push(new THREE.Vector3( -17.5001, -25.2071, -29.2071 ));
	geometry.vertices.push(new THREE.Vector3( -16.4155, -24.7652, -29.2071 ));
	geometry.vertices.push(new THREE.Vector3( -14.0014, -19.1019, -29.2071 ));
	geometry.vertices.push(new THREE.Vector3( -14.5001, -17.5000, -29.5000 ));
	geometry.vertices.push(new THREE.Vector3( -14.6137, -16.0451, -29.5000 ));
	geometry.vertices.push(new THREE.Vector3( -16.7691, -10.9014, -29.5000 ));
	geometry.vertices.push(new THREE.Vector3( -17.5001, -10.5000, -29.5000 ));
	geometry.vertices.push(new THREE.Vector3( -21.0001, -11.4378, -29.5000 ));
	geometry.vertices.push(new THREE.Vector3( -23.5623, -14.0000, -29.5000 ));
	geometry.vertices.push(new THREE.Vector3( -24.5001, -17.5000, -29.5000 ));
	geometry.vertices.push(new THREE.Vector3( -23.5623, -21.0000, -29.5000 ));
	geometry.vertices.push(new THREE.Vector3( -21.0001, -23.5622, -29.5000 ));
	geometry.vertices.push(new THREE.Vector3( -17.5001, -24.5000, -29.5000 ));
	geometry.vertices.push(new THREE.Vector3( -16.7691, -24.0986, -29.5000 ));
	geometry.vertices.push(new THREE.Vector3( -14.6137, -18.9549, -29.5000 ));
	geometry.vertices.push(new THREE.Vector3( -13.7930, -17.5000, -29.2071 ));
	geometry.faces.push(new THREE.Face3(  25,   24,   36, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  35,   46,   24, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  54,   55,   59, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  25,   36,   37, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  26,   25,   37, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  35,   34,   45, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  46,   35,   45, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  48,   49,   59, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  51,   52,   59, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  57,   58,   59, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  13,    0,   12, new THREE.Vector3( 0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  13,    1,    0, new THREE.Vector3( 0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  14,    1,   13, new THREE.Vector3( 0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  14,    2,    1, new THREE.Vector3( 0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  15,    2,   14, new THREE.Vector3( 0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  15,    3,    2, new THREE.Vector3( 0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  16,    3,   15, new THREE.Vector3( -0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  16,    4,    3, new THREE.Vector3( -0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  17,    4,   16, new THREE.Vector3( -0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  17,    5,    4, new THREE.Vector3( -0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  18,    5,   17, new THREE.Vector3( -0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  18,    6,    5, new THREE.Vector3( -0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  19,    6,   18, new THREE.Vector3( -0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  19,    7,    6, new THREE.Vector3( -0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  20,    7,   19, new THREE.Vector3( -0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  20,    8,    7, new THREE.Vector3( -0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  21,    8,   20, new THREE.Vector3( -0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  21,    9,    8, new THREE.Vector3( -0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  22,    9,   21, new THREE.Vector3( 0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  22,   10,    9, new THREE.Vector3( 0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  23,   10,   22, new THREE.Vector3( 0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  23,   11,   10, new THREE.Vector3( 0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  12,   11,   23, new THREE.Vector3( 0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  12,    0,   11, new THREE.Vector3( 0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  24,   62,   36, new THREE.Vector3( 0.99, 0.15, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  24,   61,   62, new THREE.Vector3( 0.99, 0.15, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  36,   63,   37, new THREE.Vector3( 0.92, 0.39, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  36,   62,   63, new THREE.Vector3( 0.92, 0.39, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  37,   64,   38, new THREE.Vector3( 0.35, 0.94, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  37,   63,   64, new THREE.Vector3( 0.35, 0.94, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  38,   65,   39, new THREE.Vector3( -0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  38,   64,   65, new THREE.Vector3( -0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  39,   66,   40, new THREE.Vector3( -0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  39,   65,   66, new THREE.Vector3( -0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  40,   67,   41, new THREE.Vector3( -0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  40,   66,   67, new THREE.Vector3( -0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  41,   68,   42, new THREE.Vector3( -0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  41,   67,   68, new THREE.Vector3( -0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  42,   69,   43, new THREE.Vector3( -0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  42,   68,   69, new THREE.Vector3( -0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  43,   70,   44, new THREE.Vector3( -0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  43,   69,   70, new THREE.Vector3( -0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  44,   71,   45, new THREE.Vector3( 0.35, -0.94, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  44,   70,   71, new THREE.Vector3( 0.35, -0.94, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  45,   72,   46, new THREE.Vector3( 0.92, -0.39, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  45,   71,   72, new THREE.Vector3( 0.92, -0.39, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  46,   61,   24, new THREE.Vector3( 0.99, -0.15, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  46,   72,   61, new THREE.Vector3( 0.99, -0.15, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  48,   26,   49, new THREE.Vector3( 0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  48,   25,   26, new THREE.Vector3( 0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  49,   27,   50, new THREE.Vector3( 0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  49,   26,   27, new THREE.Vector3( 0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  50,   28,   51, new THREE.Vector3( -0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  50,   27,   28, new THREE.Vector3( -0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  51,   29,   52, new THREE.Vector3( -0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  51,   28,   29, new THREE.Vector3( -0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  52,   30,   53, new THREE.Vector3( -0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  52,   29,   30, new THREE.Vector3( -0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  53,   31,   54, new THREE.Vector3( -0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  53,   30,   31, new THREE.Vector3( -0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  54,   32,   55, new THREE.Vector3( -0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  54,   31,   32, new THREE.Vector3( -0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  55,   33,   56, new THREE.Vector3( -0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  55,   32,   33, new THREE.Vector3( -0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  56,   34,   57, new THREE.Vector3( 0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  56,   33,   34, new THREE.Vector3( 0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  57,   35,   58, new THREE.Vector3( 0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  57,   34,   35, new THREE.Vector3( 0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  61,   73,   62, new THREE.Vector3( 0.93, 0.14, -0.34 ).normalize()));
	geometry.faces.push(new THREE.Face3(  61,   96,   73, new THREE.Vector3( 0.92, 0.12, -0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3(  83,   61,   72, new THREE.Vector3( 0.93, -0.14, -0.34 ).normalize()));
	geometry.faces.push(new THREE.Face3(  83,   96,   61, new THREE.Vector3( 0.92, -0.12, -0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3(  47,   25,   48, new THREE.Vector3( 0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  47,   24,   25, new THREE.Vector3( 0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  58,   24,   47, new THREE.Vector3( 0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  58,   35,   24, new THREE.Vector3( 0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  43,   31,   42, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  43,   32,   31, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  74,   64,   63, new THREE.Vector3( 0.32, 0.86, -0.40 ).normalize()));
	geometry.faces.push(new THREE.Face3(  74,   75,   64, new THREE.Vector3( 0.35, 0.86, -0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  64,   76,   65, new THREE.Vector3( -0.24, 0.90, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3(  64,   75,   76, new THREE.Vector3( -0.24, 0.90, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3(  65,   77,   66, new THREE.Vector3( -0.66, 0.66, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3(  65,   76,   77, new THREE.Vector3( -0.66, 0.66, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3(  66,   78,   67, new THREE.Vector3( -0.90, 0.24, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3(  66,   77,   78, new THREE.Vector3( -0.90, 0.24, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3(  67,   79,   68, new THREE.Vector3( -0.90, -0.24, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3(  67,   78,   79, new THREE.Vector3( -0.90, -0.24, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3(  68,   80,   69, new THREE.Vector3( -0.66, -0.66, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3(  68,   79,   80, new THREE.Vector3( -0.66, -0.66, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3(  69,   81,   70, new THREE.Vector3( -0.24, -0.90, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3(  69,   80,   81, new THREE.Vector3( -0.24, -0.90, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3(  70,   82,   71, new THREE.Vector3( 0.32, -0.86, -0.40 ).normalize()));
	geometry.faces.push(new THREE.Face3(  70,   81,   82, new THREE.Vector3( 0.35, -0.86, -0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  71,   83,   72, new THREE.Vector3( 0.86, -0.37, -0.34 ).normalize()));
	geometry.faces.push(new THREE.Face3(  71,   82,   83, new THREE.Vector3( 0.87, -0.37, -0.32 ).normalize()));
	geometry.faces.push(new THREE.Face3(  75,   88,   76, new THREE.Vector3( -0.10, 0.38, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3(  75,   87,   88, new THREE.Vector3( -0.10, 0.38, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3(  76,   89,   77, new THREE.Vector3( -0.28, 0.28, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3(  76,   88,   89, new THREE.Vector3( -0.28, 0.28, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3(  77,   90,   78, new THREE.Vector3( -0.38, 0.10, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3(  77,   89,   90, new THREE.Vector3( -0.38, 0.10, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3(  78,   91,   79, new THREE.Vector3( -0.38, -0.10, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3(  78,   90,   91, new THREE.Vector3( -0.38, -0.10, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3(  79,   92,   80, new THREE.Vector3( -0.28, -0.28, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3(  79,   91,   92, new THREE.Vector3( -0.28, -0.28, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3(  80,   93,   81, new THREE.Vector3( -0.10, -0.38, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3(  80,   92,   93, new THREE.Vector3( -0.10, -0.38, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3(   1,   84,    0, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   1,   85,   84, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   0,   95,   11, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   0,   84,   95, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  58,   48,   59, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  58,   47,   48, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  51,   49,   50, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  51,   59,   49, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  54,   52,   53, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  54,   59,   52, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  57,   55,   56, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  57,   59,   55, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  73,   63,   62, new THREE.Vector3( 0.86, 0.37, -0.34 ).normalize()));
	geometry.faces.push(new THREE.Face3(  73,   74,   63, new THREE.Vector3( 0.87, 0.37, -0.32 ).normalize()));
	geometry.faces.push(new THREE.Face3(  84,   73,   96, new THREE.Vector3( 0.38, 0.05, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3(  84,   85,   73, new THREE.Vector3( 0.42, 0.03, -0.90 ).normalize()));
	geometry.faces.push(new THREE.Face3(   5,   88,    4, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   5,   89,   88, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  84,   83,   95, new THREE.Vector3( 0.42, -0.03, -0.90 ).normalize()));
	geometry.faces.push(new THREE.Face3(  84,   96,   83, new THREE.Vector3( 0.38, -0.05, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3(  39,   27,   38, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  39,   28,   27, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  40,   28,   39, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  40,   29,   28, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  41,   29,   40, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  41,   30,   29, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  42,   30,   41, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  42,   31,   30, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  44,   32,   43, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  44,   33,   32, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  14,   12,   60, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  14,   13,   12, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  16,   14,   60, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  16,   15,   14, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  22,   20,   60, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  22,   21,   20, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  12,   22,   60, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  12,   23,   22, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  86,   75,   74, new THREE.Vector3( 0.14, 0.34, -0.93 ).normalize()));
	geometry.faces.push(new THREE.Face3(  86,   87,   75, new THREE.Vector3( 0.21, 0.37, -0.90 ).normalize()));
	geometry.faces.push(new THREE.Face3(  81,   94,   82, new THREE.Vector3( 0.14, -0.34, -0.93 ).normalize()));
	geometry.faces.push(new THREE.Face3(  81,   93,   94, new THREE.Vector3( 0.21, -0.37, -0.90 ).normalize()));
	geometry.faces.push(new THREE.Face3(  18,   16,   60, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  18,   17,   16, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  20,   18,   60, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  20,   19,   18, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   4,   87,    3, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   4,   88,   87, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   6,   89,    5, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   6,   90,   89, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   7,   90,    6, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   7,   91,   90, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   8,   91,    7, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   8,   92,   91, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   9,   92,    8, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   9,   93,   92, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  38,   26,   37, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  38,   27,   26, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  45,   33,   44, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  45,   34,   33, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  10,   93,    9, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  10,   94,   93, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  82,   95,   83, new THREE.Vector3( 0.39, -0.17, -0.90 ).normalize()));
	geometry.faces.push(new THREE.Face3(  82,   94,   95, new THREE.Vector3( 0.41, -0.17, -0.89 ).normalize()));
	geometry.faces.push(new THREE.Face3(   3,   86,    2, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   3,   87,   86, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  11,   94,   10, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  11,   95,   94, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  85,    2,   86, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  85,    1,    2, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  85,   74,   73, new THREE.Vector3( 0.39, 0.17, -0.90 ).normalize()));
	geometry.faces.push(new THREE.Face3(  85,   86,   74, new THREE.Vector3( 0.41, 0.17, -0.89 ).normalize()));
	var material = new THREE.MeshLambertMaterial( {color:0x010101} );
	var mesh = new THREE.Mesh( geometry, material );
	var center = new THREE.Vector3( -19.500099, -17.500000, -27.799999 );
	return [mesh,center];
}
