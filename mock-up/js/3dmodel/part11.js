// name = upper arm r
// verticesNum = 80
// indicesNum = 156
// center = ( -45.250000, 26.799999, -7.550000 )
// length = ( 12.000000, 54.000000, 29.500000 ) 
function initPartsValues11() {
	var geometry = new THREE.Geometry();
	geometry.vertices.push(new THREE.Vector3( -40.2500,  53.8000, -21.3000 ));
	geometry.vertices.push(new THREE.Vector3( -50.2500,  53.8000, -21.3000 ));
	geometry.vertices.push(new THREE.Vector3( -40.2500,  53.8000,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -50.2500,  53.8000,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -40.2500,  52.8000,   7.2000 ));
	geometry.vertices.push(new THREE.Vector3( -50.2500,  52.8000,   7.2000 ));
	geometry.vertices.push(new THREE.Vector3( -40.2500,   0.8000,   7.2000 ));
	geometry.vertices.push(new THREE.Vector3( -50.2500,   0.8000,   7.2000 ));
	geometry.vertices.push(new THREE.Vector3( -40.2500,  -0.2000,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -50.2500,  -0.2000,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -40.2500,  -0.2000, -21.3000 ));
	geometry.vertices.push(new THREE.Vector3( -50.2500,  -0.2000, -21.3000 ));
	geometry.vertices.push(new THREE.Vector3( -40.2500,   0.8000, -22.3000 ));
	geometry.vertices.push(new THREE.Vector3( -50.2500,   0.8000, -22.3000 ));
	geometry.vertices.push(new THREE.Vector3( -40.2500,  52.8000, -22.3000 ));
	geometry.vertices.push(new THREE.Vector3( -50.2500,  52.8000, -22.3000 ));
	geometry.vertices.push(new THREE.Vector3( -51.2500,  52.8000, -21.3000 ));
	geometry.vertices.push(new THREE.Vector3( -51.2500,   0.8000, -21.3000 ));
	geometry.vertices.push(new THREE.Vector3( -51.2500,  52.8000,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -51.2500,   0.8000,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2500,   0.8000, -21.3000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2500,  52.8000, -21.3000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2500,   0.8000,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2500,  52.8000,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -40.2500,  53.6660,   6.7000 ));
	geometry.vertices.push(new THREE.Vector3( -50.2500,  53.6660,   6.7000 ));
	geometry.vertices.push(new THREE.Vector3( -40.2500,  53.3000,   7.0660 ));
	geometry.vertices.push(new THREE.Vector3( -50.2500,  53.3000,   7.0660 ));
	geometry.vertices.push(new THREE.Vector3( -40.2500,  -0.0660,   6.7000 ));
	geometry.vertices.push(new THREE.Vector3( -50.2500,  -0.0660,   6.7000 ));
	geometry.vertices.push(new THREE.Vector3( -40.2500,   0.3000,   7.0660 ));
	geometry.vertices.push(new THREE.Vector3( -50.2500,   0.3000,   7.0660 ));
	geometry.vertices.push(new THREE.Vector3( -40.2500,  53.6660, -21.8000 ));
	geometry.vertices.push(new THREE.Vector3( -50.2500,  53.6660, -21.8000 ));
	geometry.vertices.push(new THREE.Vector3( -40.2500,  53.3000, -22.1660 ));
	geometry.vertices.push(new THREE.Vector3( -50.2500,  53.3000, -22.1660 ));
	geometry.vertices.push(new THREE.Vector3( -40.2500,  -0.0660, -21.8000 ));
	geometry.vertices.push(new THREE.Vector3( -50.2500,  -0.0660, -21.8000 ));
	geometry.vertices.push(new THREE.Vector3( -40.2500,   0.3000, -22.1660 ));
	geometry.vertices.push(new THREE.Vector3( -50.2500,   0.3000, -22.1660 ));
	geometry.vertices.push(new THREE.Vector3( -50.7500,  53.6660, -21.3000 ));
	geometry.vertices.push(new THREE.Vector3( -50.7500,  53.6660,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -51.1160,  53.3000, -21.3000 ));
	geometry.vertices.push(new THREE.Vector3( -51.1160,  53.3000,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -50.7500,  -0.0660, -21.3000 ));
	geometry.vertices.push(new THREE.Vector3( -50.7500,  -0.0660,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -51.1160,   0.3000, -21.3000 ));
	geometry.vertices.push(new THREE.Vector3( -51.1160,   0.3000,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -39.7500,  53.6660, -21.3000 ));
	geometry.vertices.push(new THREE.Vector3( -39.7500,  53.6660,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -39.3840,  53.3000, -21.3000 ));
	geometry.vertices.push(new THREE.Vector3( -39.3840,  53.3000,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -39.7500,  -0.0660, -21.3000 ));
	geometry.vertices.push(new THREE.Vector3( -39.7500,  -0.0660,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -39.3840,   0.3000, -21.3000 ));
	geometry.vertices.push(new THREE.Vector3( -39.3840,   0.3000,   6.2000 ));
	geometry.vertices.push(new THREE.Vector3( -50.7500,   0.8000,   7.0660 ));
	geometry.vertices.push(new THREE.Vector3( -50.7500,  52.8000,   7.0660 ));
	geometry.vertices.push(new THREE.Vector3( -51.1160,   0.8000,   6.7000 ));
	geometry.vertices.push(new THREE.Vector3( -51.1160,  52.8000,   6.7000 ));
	geometry.vertices.push(new THREE.Vector3( -50.7500,   0.8000, -22.1660 ));
	geometry.vertices.push(new THREE.Vector3( -50.7500,  52.8000, -22.1660 ));
	geometry.vertices.push(new THREE.Vector3( -51.1160,   0.8000, -21.8000 ));
	geometry.vertices.push(new THREE.Vector3( -51.1160,  52.8000, -21.8000 ));
	geometry.vertices.push(new THREE.Vector3( -39.7500,   0.8000,   7.0660 ));
	geometry.vertices.push(new THREE.Vector3( -39.7500,  52.8000,   7.0660 ));
	geometry.vertices.push(new THREE.Vector3( -39.3840,   0.8000,   6.7000 ));
	geometry.vertices.push(new THREE.Vector3( -39.3840,  52.8000,   6.7000 ));
	geometry.vertices.push(new THREE.Vector3( -39.7500,   0.8000, -22.1660 ));
	geometry.vertices.push(new THREE.Vector3( -39.7500,  52.8000, -22.1660 ));
	geometry.vertices.push(new THREE.Vector3( -39.3840,   0.8000, -21.8000 ));
	geometry.vertices.push(new THREE.Vector3( -39.3840,  52.8000, -21.8000 ));
	geometry.vertices.push(new THREE.Vector3( -50.8624,  53.3000,   6.8124 ));
	geometry.vertices.push(new THREE.Vector3( -39.6376,  53.3000,   6.8124 ));
	geometry.vertices.push(new THREE.Vector3( -50.8624,   0.3000,   6.8124 ));
	geometry.vertices.push(new THREE.Vector3( -50.8624,  53.3000, -21.9124 ));
	geometry.vertices.push(new THREE.Vector3( -39.6376,   0.3000,   6.8124 ));
	geometry.vertices.push(new THREE.Vector3( -50.8624,   0.3000, -21.9124 ));
	geometry.vertices.push(new THREE.Vector3( -39.6376,  53.3000, -21.9124 ));
	geometry.vertices.push(new THREE.Vector3( -39.6376,   0.3000, -21.9124 ));
	geometry.faces.push(new THREE.Face3(  41,   25,    3, new THREE.Vector3( -0.25, 0.94, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  43,   72,   41, new THREE.Vector3( -0.68, 0.68, 0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  25,   41,   72, new THREE.Vector3( -0.41, 0.81, 0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  72,   27,   25, new THREE.Vector3( -0.28, 0.68, 0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  18,   59,   43, new THREE.Vector3( -0.94, 0.25, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  72,   43,   59, new THREE.Vector3( -0.86, 0.36, 0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  59,   57,   72, new THREE.Vector3( -0.69, 0.20, 0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  27,   72,   57, new THREE.Vector3( -0.36, 0.36, 0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  57,    5,   27, new THREE.Vector3( -0.25, 0.25, 0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  49,    2,   24, new THREE.Vector3( 0.25, 0.94, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  51,   49,   73, new THREE.Vector3( 0.68, 0.68, 0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  24,   73,   49, new THREE.Vector3( 0.41, 0.81, 0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  73,   24,   26, new THREE.Vector3( 0.28, 0.68, 0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  23,   51,   67, new THREE.Vector3( 0.94, 0.25, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  73,   67,   51, new THREE.Vector3( 0.86, 0.36, 0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  67,   73,   65, new THREE.Vector3( 0.69, 0.20, 0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  26,   65,   73, new THREE.Vector3( 0.36, 0.36, 0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  65,   26,    4, new THREE.Vector3( 0.25, 0.25, 0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  45,    9,   29, new THREE.Vector3( -0.25, -0.94, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  47,   45,   74, new THREE.Vector3( -0.68, -0.68, 0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  29,   74,   45, new THREE.Vector3( -0.41, -0.81, 0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  74,   29,   31, new THREE.Vector3( -0.28, -0.68, 0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  19,   47,   58, new THREE.Vector3( -0.94, -0.25, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  74,   58,   47, new THREE.Vector3( -0.86, -0.36, 0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  58,   74,   56, new THREE.Vector3( -0.69, -0.20, 0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  31,   56,   74, new THREE.Vector3( -0.36, -0.36, 0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  56,   31,    7, new THREE.Vector3( -0.25, -0.25, 0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  40,    1,   33, new THREE.Vector3( -0.25, 0.94, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  42,   40,   75, new THREE.Vector3( -0.68, 0.68, -0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  33,   75,   40, new THREE.Vector3( -0.41, 0.81, -0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  75,   33,   35, new THREE.Vector3( -0.28, 0.68, -0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  16,   42,   63, new THREE.Vector3( -0.94, 0.25, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  75,   63,   42, new THREE.Vector3( -0.86, 0.36, -0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  63,   75,   61, new THREE.Vector3( -0.69, 0.20, -0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  35,   61,   75, new THREE.Vector3( -0.36, 0.36, -0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  61,   35,   15, new THREE.Vector3( -0.25, 0.25, -0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  53,   28,    8, new THREE.Vector3( 0.25, -0.94, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  55,   76,   53, new THREE.Vector3( 0.68, -0.68, 0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  28,   53,   76, new THREE.Vector3( 0.41, -0.81, 0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  76,   30,   28, new THREE.Vector3( 0.28, -0.68, 0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  22,   66,   55, new THREE.Vector3( 0.94, -0.25, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  76,   55,   66, new THREE.Vector3( 0.86, -0.36, 0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  66,   64,   76, new THREE.Vector3( 0.69, -0.20, 0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  30,   76,   64, new THREE.Vector3( 0.36, -0.36, 0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  64,    6,   30, new THREE.Vector3( 0.25, -0.25, 0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  44,   37,   11, new THREE.Vector3( -0.25, -0.94, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  46,   77,   44, new THREE.Vector3( -0.68, -0.68, -0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  37,   44,   77, new THREE.Vector3( -0.41, -0.81, -0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  77,   39,   37, new THREE.Vector3( -0.28, -0.68, -0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  17,   62,   46, new THREE.Vector3( -0.94, -0.25, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  77,   46,   62, new THREE.Vector3( -0.86, -0.36, -0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  62,   60,   77, new THREE.Vector3( -0.69, -0.20, -0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  39,   77,   60, new THREE.Vector3( -0.36, -0.36, -0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  60,   13,   39, new THREE.Vector3( -0.25, -0.25, -0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  48,   32,    0, new THREE.Vector3( 0.25, 0.94, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  50,   78,   48, new THREE.Vector3( 0.68, 0.68, -0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  32,   48,   78, new THREE.Vector3( 0.41, 0.81, -0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  78,   34,   32, new THREE.Vector3( 0.28, 0.68, -0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  21,   71,   50, new THREE.Vector3( 0.94, 0.25, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  78,   50,   71, new THREE.Vector3( 0.86, 0.36, -0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  71,   69,   78, new THREE.Vector3( 0.69, 0.20, -0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  34,   78,   69, new THREE.Vector3( 0.36, 0.36, -0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  69,   14,   34, new THREE.Vector3( 0.25, 0.25, -0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  52,   10,   36, new THREE.Vector3( 0.25, -0.94, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  54,   52,   79, new THREE.Vector3( 0.68, -0.68, -0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  36,   79,   52, new THREE.Vector3( 0.41, -0.81, -0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  79,   36,   38, new THREE.Vector3( 0.28, -0.68, -0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  20,   54,   70, new THREE.Vector3( 0.94, -0.25, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  79,   70,   54, new THREE.Vector3( 0.86, -0.36, -0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  70,   79,   68, new THREE.Vector3( 0.69, -0.20, -0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  38,   68,   79, new THREE.Vector3( 0.36, -0.36, -0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  68,   38,   12, new THREE.Vector3( 0.25, -0.25, -0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  18,   17,   19, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  18,   16,   17, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  14,   13,   15, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  14,   12,   13, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   1,    2,    0, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   1,    3,    2, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  19,   59,   18, new THREE.Vector3( -0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  19,   58,   59, new THREE.Vector3( -0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  23,   66,   22, new THREE.Vector3( 0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  23,   67,   66, new THREE.Vector3( 0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  58,   57,   59, new THREE.Vector3( -0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  58,   56,   57, new THREE.Vector3( -0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  67,   64,   66, new THREE.Vector3( 0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  67,   65,   64, new THREE.Vector3( 0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(   5,   56,    7, new THREE.Vector3( -0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(   5,   57,   56, new THREE.Vector3( -0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  22,   21,   23, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  22,   20,   21, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  51,   21,   50, new THREE.Vector3( 0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  51,   23,   21, new THREE.Vector3( 0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  42,   18,   43, new THREE.Vector3( -0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  42,   16,   18, new THREE.Vector3( -0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  40,   43,   41, new THREE.Vector3( -0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  40,   42,   43, new THREE.Vector3( -0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  50,   49,   51, new THREE.Vector3( 0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  50,   48,   49, new THREE.Vector3( 0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  69,   70,   68, new THREE.Vector3( 0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  69,   71,   70, new THREE.Vector3( 0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  62,   16,   63, new THREE.Vector3( -0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  62,   17,   16, new THREE.Vector3( -0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  20,   71,   21, new THREE.Vector3( 0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  20,   70,   71, new THREE.Vector3( 0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  60,   63,   61, new THREE.Vector3( -0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  60,   62,   63, new THREE.Vector3( -0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  61,   13,   60, new THREE.Vector3( -0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  61,   15,   13, new THREE.Vector3( -0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  14,   68,   12, new THREE.Vector3( 0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  14,   69,   68, new THREE.Vector3( 0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  54,   22,   55, new THREE.Vector3( 0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  54,   20,   22, new THREE.Vector3( 0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  17,   47,   19, new THREE.Vector3( -0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  17,   46,   47, new THREE.Vector3( -0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  52,   55,   53, new THREE.Vector3( 0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  52,   54,   55, new THREE.Vector3( 0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  45,   46,   44, new THREE.Vector3( -0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  45,   47,   46, new THREE.Vector3( -0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  44,    9,   45, new THREE.Vector3( -0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  44,   11,    9, new THREE.Vector3( -0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  53,   10,   52, new THREE.Vector3( 0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  53,    8,   10, new THREE.Vector3( 0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  48,    2,   49, new THREE.Vector3( 0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  48,    0,    2, new THREE.Vector3( 0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   1,   41,    3, new THREE.Vector3( -0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   1,   40,   41, new THREE.Vector3( -0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   6,   65,    4, new THREE.Vector3( 0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(   6,   64,   65, new THREE.Vector3( 0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(   6,    5,    7, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   6,    4,    5, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   9,   10,    8, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   9,   11,   10, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  29,    8,   28, new THREE.Vector3( 0.00, -0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  29,    9,    8, new THREE.Vector3( 0.00, -0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(   3,   24,    2, new THREE.Vector3( 0.00, 0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(   3,   25,   24, new THREE.Vector3( 0.00, 0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  31,   28,   30, new THREE.Vector3( 0.00, -0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  31,   29,   28, new THREE.Vector3( 0.00, -0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  26,   25,   27, new THREE.Vector3( 0.00, 0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  26,   24,   25, new THREE.Vector3( 0.00, 0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  27,    4,   26, new THREE.Vector3( 0.00, 0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  27,    5,    4, new THREE.Vector3( 0.00, 0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  30,    7,   31, new THREE.Vector3( 0.00, -0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  30,    6,    7, new THREE.Vector3( 0.00, -0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  36,   11,   37, new THREE.Vector3( 0.00, -0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  36,   10,   11, new THREE.Vector3( 0.00, -0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  33,    0,   32, new THREE.Vector3( 0.00, 0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  33,    1,    0, new THREE.Vector3( 0.00, 0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  32,   35,   33, new THREE.Vector3( 0.00, 0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  32,   34,   35, new THREE.Vector3( 0.00, 0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  37,   38,   36, new THREE.Vector3( 0.00, -0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  37,   39,   38, new THREE.Vector3( 0.00, -0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  39,   12,   38, new THREE.Vector3( 0.00, -0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  39,   13,   12, new THREE.Vector3( 0.00, -0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  15,   34,   14, new THREE.Vector3( 0.00, 0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  15,   35,   34, new THREE.Vector3( 0.00, 0.26, -0.97 ).normalize()));
	var material = new THREE.MeshLambertMaterial( {color:0x010101} );
	var mesh = new THREE.Mesh( geometry, material );
	var center = new THREE.Vector3( -45.250000, 26.799999, -7.550000 );
	return [mesh,center];
}
