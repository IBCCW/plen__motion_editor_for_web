// name = shin out r
// verticesNum = 148
// indicesNum = 220
// center = ( -41.299801, -82.000000, -7.300000 )
// length = ( 6.000000, 47.000000, 25.000000 ) 
function initPartsValues37() {
	var geometry = new THREE.Geometry();
	geometry.vertices.push(new THREE.Vector3( -42.2998, -58.5000, -17.8000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -58.5000, -17.8000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -58.5000,   3.2000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -58.5000,   3.2000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -60.5000,   5.2000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -60.5000,   5.2000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -103.5000,   5.2000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -103.5000,   5.2000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -105.5000,   3.2000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -105.5000,   3.2000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -105.5000, -17.8000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -105.5000, -17.8000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -103.5000, -19.8000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -103.5000, -19.8000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -60.5000, -19.8000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -60.5000, -19.8000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -60.5000, -17.8000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -103.5000, -17.8000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -60.5000,   3.2000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -103.5000,   3.2000 ));
	geometry.vertices.push(new THREE.Vector3( -44.2998, -103.5000, -17.8000 ));
	geometry.vertices.push(new THREE.Vector3( -44.2998, -60.5000, -17.8000 ));
	geometry.vertices.push(new THREE.Vector3( -44.2998, -103.5000,   3.2000 ));
	geometry.vertices.push(new THREE.Vector3( -44.2998, -60.5000,   3.2000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -58.7679,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -58.7679,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -59.5000,   4.9321 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -59.5000,   4.9321 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -105.2320,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -105.2320,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -104.5000,   4.9321 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -104.5000,   4.9321 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -58.7679, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -58.7679, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -59.5000, -19.5320 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -59.5000, -19.5320 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -105.2320, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -105.2320, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -104.5000, -19.5320 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -104.5000, -19.5320 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -58.7679, -17.8000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -58.7679,   3.2000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -59.5000, -17.8000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -59.5000,   3.2000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -105.2320, -17.8000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -105.2320,   3.2000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -104.5000, -17.8000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -104.5000,   3.2000 ));
	geometry.vertices.push(new THREE.Vector3( -43.2998, -58.7679, -17.8000 ));
	geometry.vertices.push(new THREE.Vector3( -43.2998, -58.7679,   3.2000 ));
	geometry.vertices.push(new THREE.Vector3( -44.0318, -59.5000, -17.8000 ));
	geometry.vertices.push(new THREE.Vector3( -44.0318, -59.5000,   3.2000 ));
	geometry.vertices.push(new THREE.Vector3( -43.2998, -105.2320, -17.8000 ));
	geometry.vertices.push(new THREE.Vector3( -43.2998, -105.2320,   3.2000 ));
	geometry.vertices.push(new THREE.Vector3( -44.0318, -104.5000, -17.8000 ));
	geometry.vertices.push(new THREE.Vector3( -44.0318, -104.5000,   3.2000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -103.5000,   4.9321 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -60.5000,   4.9321 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -103.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -60.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -103.5000, -19.5320 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -60.5000, -19.5320 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -103.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -60.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -43.2998, -103.5000,   4.9321 ));
	geometry.vertices.push(new THREE.Vector3( -43.2998, -60.5000,   4.9321 ));
	geometry.vertices.push(new THREE.Vector3( -44.0318, -103.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -44.0318, -60.5000,   4.2000 ));
	geometry.vertices.push(new THREE.Vector3( -43.2998, -103.5000, -19.5320 ));
	geometry.vertices.push(new THREE.Vector3( -43.2998, -60.5000, -19.5320 ));
	geometry.vertices.push(new THREE.Vector3( -44.0318, -103.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -44.0318, -60.5000, -18.8000 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -59.5000,   4.4247 ));
	geometry.vertices.push(new THREE.Vector3( -43.5245, -59.5000,   4.4247 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -104.5000,   4.4247 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -59.5000, -19.0247 ));
	geometry.vertices.push(new THREE.Vector3( -43.5245, -104.5000,   4.4247 ));
	geometry.vertices.push(new THREE.Vector3( -39.2998, -104.5000, -19.0247 ));
	geometry.vertices.push(new THREE.Vector3( -43.5245, -59.5000, -19.0247 ));
	geometry.vertices.push(new THREE.Vector3( -43.5245, -104.5000, -19.0247 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -64.5000,  -1.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -62.3786,  -1.8787 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -61.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -62.3786,  -6.1213 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -64.5000,  -7.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -66.6213,  -6.1213 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -67.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -66.6213,  -1.8787 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -64.5000,  -1.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -62.3786,  -1.8787 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -61.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -62.3786,  -6.1213 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -64.5000,  -7.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -66.6213,  -6.1213 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -67.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -66.6213,  -1.8787 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -64.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -64.5000,  -1.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -62.3786,  -1.8787 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -61.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -62.3786,  -6.1213 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -64.5000,  -7.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -66.6213,  -6.1213 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -67.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -66.6213,  -1.8787 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -64.5000,  -1.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -62.3786,  -1.8787 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -61.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -62.3786,  -6.1213 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -64.5000,  -7.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -66.6213,  -6.1213 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -67.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -66.6213,  -1.8787 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -64.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -99.5000,  -1.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -101.6213,  -1.8787 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -102.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -101.6213,  -6.1213 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -99.5000,  -7.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -97.3786,  -6.1213 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -96.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -97.3786,  -1.8787 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -99.5000,  -1.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -101.6213,  -1.8787 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -102.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -101.6213,  -6.1213 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -99.5000,  -7.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -97.3786,  -6.1213 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -96.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -97.3786,  -1.8787 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -99.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -99.5000,  -1.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -101.6213,  -1.8787 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -102.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -101.6213,  -6.1213 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -99.5000,  -7.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -97.3786,  -6.1213 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -96.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -38.2998, -97.3786,  -1.8787 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -99.5000,  -1.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -101.6213,  -1.8787 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -102.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -101.6213,  -6.1213 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -99.5000,  -7.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -97.3786,  -6.1213 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -96.5000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -97.3786,  -1.8787 ));
	geometry.vertices.push(new THREE.Vector3( -42.2998, -99.5000,  -4.0000 ));
	geometry.faces.push(new THREE.Face3(  25,   41,    3, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  72,   43,   41, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  41,   25,   72, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  27,   72,   25, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  59,   18,   43, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  43,   72,   59, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  57,   59,   72, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  72,   27,   57, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   5,   57,   27, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   2,   49,   24, new THREE.Vector3( -0.25, 0.94, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  49,   51,   73, new THREE.Vector3( -0.68, 0.68, 0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  73,   24,   49, new THREE.Vector3( -0.41, 0.81, 0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  24,   73,   26, new THREE.Vector3( -0.28, 0.68, 0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  51,   23,   67, new THREE.Vector3( -0.94, 0.25, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  67,   73,   51, new THREE.Vector3( -0.86, 0.36, 0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  73,   67,   65, new THREE.Vector3( -0.69, 0.20, 0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  65,   26,   73, new THREE.Vector3( -0.36, 0.36, 0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  26,   65,    4, new THREE.Vector3( -0.25, 0.25, 0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(   9,   45,   29, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  45,   47,   74, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  74,   29,   45, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  29,   74,   31, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  47,   19,   58, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  58,   74,   47, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  74,   58,   56, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  56,   31,   74, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  31,   56,    7, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   1,   40,   33, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  40,   42,   75, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  75,   33,   40, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  33,   75,   35, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  42,   16,   63, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  63,   75,   42, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  75,   63,   61, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  61,   35,   75, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  35,   61,   15, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  28,   53,    8, new THREE.Vector3( -0.25, -0.94, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  76,   55,   53, new THREE.Vector3( -0.68, -0.68, 0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  53,   28,   76, new THREE.Vector3( -0.41, -0.81, 0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  30,   76,   28, new THREE.Vector3( -0.28, -0.68, 0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  66,   22,   55, new THREE.Vector3( -0.94, -0.25, 0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  55,   76,   66, new THREE.Vector3( -0.86, -0.36, 0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  64,   66,   76, new THREE.Vector3( -0.69, -0.20, 0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  76,   30,   64, new THREE.Vector3( -0.36, -0.36, 0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(   6,   64,   30, new THREE.Vector3( -0.25, -0.25, 0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  37,   44,   11, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  77,   46,   44, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  44,   37,   77, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  39,   77,   37, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  62,   17,   46, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  46,   77,   62, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  60,   62,   77, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  77,   39,   60, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  13,   60,   39, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  32,   48,    0, new THREE.Vector3( -0.25, 0.94, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  78,   50,   48, new THREE.Vector3( -0.68, 0.68, -0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  48,   32,   78, new THREE.Vector3( -0.41, 0.81, -0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  34,   78,   32, new THREE.Vector3( -0.28, 0.68, -0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  71,   21,   50, new THREE.Vector3( -0.94, 0.25, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  50,   78,   71, new THREE.Vector3( -0.86, 0.36, -0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  69,   71,   78, new THREE.Vector3( -0.69, 0.20, -0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  78,   34,   69, new THREE.Vector3( -0.36, 0.36, -0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  14,   69,   34, new THREE.Vector3( -0.25, 0.25, -0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  10,   52,   36, new THREE.Vector3( -0.25, -0.94, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  52,   54,   79, new THREE.Vector3( -0.68, -0.68, -0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3(  79,   36,   52, new THREE.Vector3( -0.41, -0.81, -0.41 ).normalize()));
	geometry.faces.push(new THREE.Face3(  36,   79,   38, new THREE.Vector3( -0.28, -0.68, -0.68 ).normalize()));
	geometry.faces.push(new THREE.Face3(  54,   20,   70, new THREE.Vector3( -0.94, -0.25, -0.25 ).normalize()));
	geometry.faces.push(new THREE.Face3(  70,   79,   54, new THREE.Vector3( -0.86, -0.36, -0.36 ).normalize()));
	geometry.faces.push(new THREE.Face3(  79,   70,   68, new THREE.Vector3( -0.69, -0.20, -0.69 ).normalize()));
	geometry.faces.push(new THREE.Face3(  68,   38,   79, new THREE.Vector3( -0.36, -0.36, -0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  38,   68,   12, new THREE.Vector3( -0.25, -0.25, -0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  98,   97,   96, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  99,   98,   96, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 100,   99,   96, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 101,  100,   96, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 102,  101,   96, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 103,  102,   96, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 104,  103,   96, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  97,  104,   96, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 105,  106,  113, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 106,  107,  113, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 107,  108,  113, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 108,  109,  113, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 109,  110,  113, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 110,  111,  113, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 111,  112,  113, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 112,  105,  113, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 131,  132,  130, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 132,  133,  130, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 133,  134,  130, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 134,  135,  130, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 135,  136,  130, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 136,  137,  130, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 137,  138,  130, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 138,  131,  130, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 140,  139,  147, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 141,  140,  147, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 142,  141,  147, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 143,  142,  147, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 144,  143,  147, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 145,  144,  147, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 146,  145,  147, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 139,  146,  147, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  21,   22,   23, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  21,   20,   22, new THREE.Vector3( -1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  18,   17,   16, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  18,   19,   17, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  45,   46,   47, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  45,   44,   46, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  55,   52,   53, new THREE.Vector3( -0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  55,   54,   52, new THREE.Vector3( -0.71, -0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  17,   47,   46, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  17,   19,   47, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  22,   54,   55, new THREE.Vector3( -0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  22,   20,   54, new THREE.Vector3( -0.97, -0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  10,   53,   52, new THREE.Vector3( -0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  10,    8,   53, new THREE.Vector3( -0.26, -0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  44,    9,   11, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  44,   45,    9, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  23,   66,   67, new THREE.Vector3( -0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  23,   22,   66, new THREE.Vector3( -0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  59,   19,   18, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  59,   58,   19, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  67,   64,   65, new THREE.Vector3( -0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  67,   66,   64, new THREE.Vector3( -0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  58,   57,   56, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  58,   59,   57, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  65,    6,    4, new THREE.Vector3( -0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  65,   64,    6, new THREE.Vector3( -0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  56,    5,    7, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  56,   57,    5, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  71,   20,   21, new THREE.Vector3( -0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  71,   70,   20, new THREE.Vector3( -0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  16,   62,   63, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  16,   17,   62, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  63,   60,   61, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  63,   62,   60, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  69,   70,   71, new THREE.Vector3( -0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  69,   68,   70, new THREE.Vector3( -0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  61,   13,   15, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  61,   60,   13, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  14,   68,   69, new THREE.Vector3( -0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  14,   12,   68, new THREE.Vector3( -0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  18,   42,   43, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  18,   16,   42, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  43,   40,   41, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  43,   42,   40, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  21,   51,   50, new THREE.Vector3( -0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  21,   23,   51, new THREE.Vector3( -0.97, 0.26, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  49,   50,   51, new THREE.Vector3( -0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  49,   48,   50, new THREE.Vector3( -0.71, 0.71, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  41,    1,    3, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  41,   40,    1, new THREE.Vector3( 1.00, 0.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  48,    2,    0, new THREE.Vector3( -0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  48,   49,    2, new THREE.Vector3( -0.26, 0.97, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  13,   14,   15, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  13,   12,   14, new THREE.Vector3( 0.00, 0.00, -1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   6,    5,    4, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   6,    7,    5, new THREE.Vector3( 0.00, 0.00, 1.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  88,   81,   89, new THREE.Vector3( 0.00, 0.38, 0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3(  88,   80,   81, new THREE.Vector3( 0.00, 0.38, 0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3(  84,   91,   83, new THREE.Vector3( 0.00, 0.38, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3(  84,   92,   91, new THREE.Vector3( 0.00, 0.38, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3(  27,    4,    5, new THREE.Vector3( 0.00, 0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  27,   26,    4, new THREE.Vector3( 0.00, 0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  34,   15,   14, new THREE.Vector3( 0.00, 0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  34,   35,   15, new THREE.Vector3( 0.00, 0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  26,   25,   24, new THREE.Vector3( 0.00, 0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  26,   27,   25, new THREE.Vector3( 0.00, 0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  32,   35,   34, new THREE.Vector3( 0.00, 0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  32,   33,   35, new THREE.Vector3( 0.00, 0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  90,   83,   91, new THREE.Vector3( 0.00, 0.92, -0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3(  90,   82,   83, new THREE.Vector3( 0.00, 0.92, -0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3(  82,   89,   81, new THREE.Vector3( 0.00, 0.92, 0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3(  82,   90,   89, new THREE.Vector3( 0.00, 0.92, 0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3(  85,   92,   84, new THREE.Vector3( 0.00, -0.38, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3(  85,   93,   92, new THREE.Vector3( 0.00, -0.38, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3(  95,   80,   88, new THREE.Vector3( 0.00, -0.38, 0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3(  95,   87,   80, new THREE.Vector3( 0.00, -0.38, 0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3(  94,   87,   95, new THREE.Vector3( 0.00, -0.92, 0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3(  94,   86,   87, new THREE.Vector3( 0.00, -0.92, 0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3(  93,   86,   94, new THREE.Vector3( 0.00, -0.92, -0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3(  93,   85,   86, new THREE.Vector3( 0.00, -0.92, -0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3(  24,    3,    2, new THREE.Vector3( 0.00, 0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  24,   25,    3, new THREE.Vector3( 0.00, 0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  33,    0,    1, new THREE.Vector3( 0.00, 0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  33,   32,    0, new THREE.Vector3( 0.00, 0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3( 115,  122,  123, new THREE.Vector3( 0.00, -0.38, 0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3( 115,  114,  122, new THREE.Vector3( 0.00, -0.38, 0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3( 129,  114,  121, new THREE.Vector3( 0.00, 0.38, 0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3( 129,  122,  114, new THREE.Vector3( 0.00, 0.38, 0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3( 123,  116,  115, new THREE.Vector3( 0.00, -0.92, 0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3( 123,  124,  116, new THREE.Vector3( 0.00, -0.92, 0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3( 121,  128,  129, new THREE.Vector3( 0.00, 0.92, 0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3( 121,  120,  128, new THREE.Vector3( 0.00, 0.92, 0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3( 120,  127,  128, new THREE.Vector3( 0.00, 0.92, -0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3( 120,  119,  127, new THREE.Vector3( 0.00, 0.92, -0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3( 117,  124,  125, new THREE.Vector3( 0.00, -0.92, -0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3( 117,  116,  124, new THREE.Vector3( 0.00, -0.92, -0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3(   2,    1,    0, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   2,    3,    1, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   9,   10,   11, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   9,    8,   10, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 118,  125,  126, new THREE.Vector3( 0.00, -0.38, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3( 118,  117,  125, new THREE.Vector3( 0.00, -0.38, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3( 119,  126,  127, new THREE.Vector3( 0.00, 0.38, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3( 119,  118,  126, new THREE.Vector3( 0.00, 0.38, -0.92 ).normalize()));
	geometry.faces.push(new THREE.Face3(  36,   11,   10, new THREE.Vector3( 0.00, -0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  36,   37,   11, new THREE.Vector3( 0.00, -0.97, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  38,   37,   36, new THREE.Vector3( 0.00, -0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  38,   39,   37, new THREE.Vector3( 0.00, -0.71, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  12,   39,   38, new THREE.Vector3( 0.00, -0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  12,   13,   39, new THREE.Vector3( 0.00, -0.26, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  31,   28,   29, new THREE.Vector3( 0.00, -0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  31,   30,   28, new THREE.Vector3( 0.00, -0.71, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(   8,   29,   28, new THREE.Vector3( 0.00, -0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(   8,    9,   29, new THREE.Vector3( 0.00, -0.97, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(   7,   30,   31, new THREE.Vector3( 0.00, -0.26, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(   7,    6,   30, new THREE.Vector3( 0.00, -0.26, 0.97 ).normalize()));
	var material = new THREE.MeshLambertMaterial( {color:0xF1F1F1} );
	var mesh = new THREE.Mesh( geometry, material );
	var center = new THREE.Vector3( -41.299801, -82.000000, -7.300000 );
	return [mesh,center];
}
