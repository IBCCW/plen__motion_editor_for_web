// name = horn thigh yaw r
// verticesNum = 157
// indicesNum = 190
// center = ( -21.500000, -3.300000, -6.000000 )
// length = ( 12.000000, 4.600000, 16.000000 ) 
function initPartsValues20() {
	var geometry = new THREE.Geometry();
	geometry.vertices.push(new THREE.Vector3( -26.3000,  -5.0000,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -25.9249,  -5.0000,  -7.4000 ));
	geometry.vertices.push(new THREE.Vector3( -24.9000,  -5.0000,  -8.4249 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -5.0000,  -8.8000 ));
	geometry.vertices.push(new THREE.Vector3( -22.1000,  -5.0000,  -8.4249 ));
	geometry.vertices.push(new THREE.Vector3( -21.0751,  -5.0000,  -7.4000 ));
	geometry.vertices.push(new THREE.Vector3( -20.7000,  -5.0000,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -21.0751,  -5.0000,  -4.6000 ));
	geometry.vertices.push(new THREE.Vector3( -22.1000,  -5.0000,  -3.5751 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -5.0000,  -3.2000 ));
	geometry.vertices.push(new THREE.Vector3( -24.9000,  -5.0000,  -3.5751 ));
	geometry.vertices.push(new THREE.Vector3( -25.9249,  -5.0000,  -4.6000 ));
	geometry.vertices.push(new THREE.Vector3( -26.3000,  -5.6000,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -25.9249,  -5.6000,  -7.4000 ));
	geometry.vertices.push(new THREE.Vector3( -24.9000,  -5.6000,  -8.4249 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -5.6000,  -8.8000 ));
	geometry.vertices.push(new THREE.Vector3( -22.1000,  -5.6000,  -8.4249 ));
	geometry.vertices.push(new THREE.Vector3( -21.0751,  -5.6000,  -7.4000 ));
	geometry.vertices.push(new THREE.Vector3( -20.7000,  -5.6000,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -21.0751,  -5.6000,  -4.6000 ));
	geometry.vertices.push(new THREE.Vector3( -22.1000,  -5.6000,  -3.5751 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -5.6000,  -3.2000 ));
	geometry.vertices.push(new THREE.Vector3( -24.9000,  -5.6000,  -3.5751 ));
	geometry.vertices.push(new THREE.Vector3( -25.9249,  -5.6000,  -4.6000 ));
	geometry.vertices.push(new THREE.Vector3( -27.5000,  -3.0000,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -26.9641,  -3.0000,  -8.0000 ));
	geometry.vertices.push(new THREE.Vector3( -25.5000,  -3.0000,  -9.4641 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -3.0000, -10.0000 ));
	geometry.vertices.push(new THREE.Vector3( -21.5000,  -3.0000,  -9.4641 ));
	geometry.vertices.push(new THREE.Vector3( -20.0359,  -3.0000,  -8.0000 ));
	geometry.vertices.push(new THREE.Vector3( -19.5000,  -3.0000,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -20.0359,  -3.0000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -21.5000,  -3.0000,  -2.5359 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -3.0000,  -2.0000 ));
	geometry.vertices.push(new THREE.Vector3( -25.5000,  -3.0000,  -2.5359 ));
	geometry.vertices.push(new THREE.Vector3( -26.9641,  -3.0000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -27.2524,  -3.0000,  -7.6628 ));
	geometry.vertices.push(new THREE.Vector3( -24.7310,  -3.0000, -13.5413 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -3.0000, -14.0000 ));
	geometry.vertices.push(new THREE.Vector3( -19.5000,  -3.0000, -12.9282 ));
	geometry.vertices.push(new THREE.Vector3( -16.5718,  -3.0000, -10.0000 ));
	geometry.vertices.push(new THREE.Vector3( -15.5000,  -3.0000,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -16.5718,  -3.0000,  -2.0000 ));
	geometry.vertices.push(new THREE.Vector3( -19.5000,  -3.0000,   0.9282 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -3.0000,   2.0000 ));
	geometry.vertices.push(new THREE.Vector3( -24.7310,  -3.0000,   1.5413 ));
	geometry.vertices.push(new THREE.Vector3( -27.2524,  -3.0000,  -4.3372 ));
	geometry.vertices.push(new THREE.Vector3( -27.5000,  -1.0000,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -26.9641,  -1.0000,  -8.0000 ));
	geometry.vertices.push(new THREE.Vector3( -25.5000,  -1.0000,  -9.4641 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -1.0000, -10.0000 ));
	geometry.vertices.push(new THREE.Vector3( -21.5000,  -1.0000,  -9.4641 ));
	geometry.vertices.push(new THREE.Vector3( -20.0359,  -1.0000,  -8.0000 ));
	geometry.vertices.push(new THREE.Vector3( -19.5000,  -1.0000,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -20.0359,  -1.0000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -21.5000,  -1.0000,  -2.5359 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -1.0000,  -2.0000 ));
	geometry.vertices.push(new THREE.Vector3( -25.5000,  -1.0000,  -2.5359 ));
	geometry.vertices.push(new THREE.Vector3( -26.9641,  -1.0000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -1.0000,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -26.3000,  -5.6000,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -25.9249,  -5.6000,  -7.4000 ));
	geometry.vertices.push(new THREE.Vector3( -24.9000,  -5.6000,  -8.4249 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -5.6000,  -8.8000 ));
	geometry.vertices.push(new THREE.Vector3( -22.1000,  -5.6000,  -8.4249 ));
	geometry.vertices.push(new THREE.Vector3( -21.0751,  -5.6000,  -7.4000 ));
	geometry.vertices.push(new THREE.Vector3( -20.7000,  -5.6000,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -21.0751,  -5.6000,  -4.6000 ));
	geometry.vertices.push(new THREE.Vector3( -22.1000,  -5.6000,  -3.5751 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -5.6000,  -3.2000 ));
	geometry.vertices.push(new THREE.Vector3( -24.9000,  -5.6000,  -3.5751 ));
	geometry.vertices.push(new THREE.Vector3( -25.9249,  -5.6000,  -4.6000 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -5.6000,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -27.5000,  -3.0000,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -27.2524,  -3.0000,  -7.6628 ));
	geometry.vertices.push(new THREE.Vector3( -24.7310,  -3.0000, -13.5413 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -3.0000, -14.0000 ));
	geometry.vertices.push(new THREE.Vector3( -19.5000,  -3.0000, -12.9282 ));
	geometry.vertices.push(new THREE.Vector3( -16.5718,  -3.0000, -10.0000 ));
	geometry.vertices.push(new THREE.Vector3( -15.5000,  -3.0000,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -16.5718,  -3.0000,  -2.0000 ));
	geometry.vertices.push(new THREE.Vector3( -19.5000,  -3.0000,   0.9282 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -3.0000,   2.0000 ));
	geometry.vertices.push(new THREE.Vector3( -24.7310,  -3.0000,   1.5413 ));
	geometry.vertices.push(new THREE.Vector3( -27.2524,  -3.0000,  -4.3372 ));
	geometry.vertices.push(new THREE.Vector3( -27.5000,  -4.0000,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -27.2524,  -4.0000,  -7.6628 ));
	geometry.vertices.push(new THREE.Vector3( -24.7310,  -4.0000, -13.5413 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -4.0000, -14.0000 ));
	geometry.vertices.push(new THREE.Vector3( -19.5000,  -4.0000, -12.9282 ));
	geometry.vertices.push(new THREE.Vector3( -16.5718,  -4.0000, -10.0000 ));
	geometry.vertices.push(new THREE.Vector3( -15.5000,  -4.0000,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -16.5718,  -4.0000,  -2.0000 ));
	geometry.vertices.push(new THREE.Vector3( -19.5000,  -4.0000,   0.9282 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -4.0000,   2.0000 ));
	geometry.vertices.push(new THREE.Vector3( -24.7310,  -4.0000,   1.5413 ));
	geometry.vertices.push(new THREE.Vector3( -27.2524,  -4.0000,  -4.3372 ));
	geometry.vertices.push(new THREE.Vector3( -27.2071,  -4.7071,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -26.9987,  -4.7071,  -7.6019 ));
	geometry.vertices.push(new THREE.Vector3( -24.5846,  -4.7071, -13.2652 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -4.7071, -13.7071 ));
	geometry.vertices.push(new THREE.Vector3( -19.6464,  -4.7071, -12.6746 ));
	geometry.vertices.push(new THREE.Vector3( -16.8254,  -4.7071,  -9.8536 ));
	geometry.vertices.push(new THREE.Vector3( -15.7929,  -4.7071,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -16.8254,  -4.7071,  -2.1464 ));
	geometry.vertices.push(new THREE.Vector3( -19.6464,  -4.7071,   0.6745 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -4.7071,   1.7071 ));
	geometry.vertices.push(new THREE.Vector3( -24.5846,  -4.7071,   1.2652 ));
	geometry.vertices.push(new THREE.Vector3( -26.9987,  -4.7071,  -4.3981 ));
	geometry.vertices.push(new THREE.Vector3( -26.5000,  -5.0000,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -26.3864,  -5.0000,  -7.4549 ));
	geometry.vertices.push(new THREE.Vector3( -24.2310,  -5.0000, -12.5986 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -5.0000, -13.0000 ));
	geometry.vertices.push(new THREE.Vector3( -20.0000,  -5.0000, -12.0622 ));
	geometry.vertices.push(new THREE.Vector3( -17.4378,  -5.0000,  -9.5000 ));
	geometry.vertices.push(new THREE.Vector3( -16.5000,  -5.0000,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -17.4378,  -5.0000,  -2.5000 ));
	geometry.vertices.push(new THREE.Vector3( -20.0000,  -5.0000,   0.0622 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -5.0000,   1.0000 ));
	geometry.vertices.push(new THREE.Vector3( -24.2310,  -5.0000,   0.5986 ));
	geometry.vertices.push(new THREE.Vector3( -26.3864,  -5.0000,  -4.5451 ));
	geometry.vertices.push(new THREE.Vector3( -26.3000,  -5.0000,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -25.9249,  -5.0000,  -7.4000 ));
	geometry.vertices.push(new THREE.Vector3( -24.9000,  -5.0000,  -8.4249 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -5.0000,  -8.8000 ));
	geometry.vertices.push(new THREE.Vector3( -22.1000,  -5.0000,  -8.4249 ));
	geometry.vertices.push(new THREE.Vector3( -21.0751,  -5.0000,  -7.4000 ));
	geometry.vertices.push(new THREE.Vector3( -20.7000,  -5.0000,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -21.0751,  -5.0000,  -4.6000 ));
	geometry.vertices.push(new THREE.Vector3( -22.1000,  -5.0000,  -3.5751 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -5.0000,  -3.2000 ));
	geometry.vertices.push(new THREE.Vector3( -24.9000,  -5.0000,  -3.5751 ));
	geometry.vertices.push(new THREE.Vector3( -25.9249,  -5.0000,  -4.6000 ));
	geometry.vertices.push(new THREE.Vector3( -27.5000,  -1.0000,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -26.9641,  -1.0000,  -8.0000 ));
	geometry.vertices.push(new THREE.Vector3( -25.5000,  -1.0000,  -9.4641 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -1.0000, -10.0000 ));
	geometry.vertices.push(new THREE.Vector3( -21.5000,  -1.0000,  -9.4641 ));
	geometry.vertices.push(new THREE.Vector3( -20.0359,  -1.0000,  -8.0000 ));
	geometry.vertices.push(new THREE.Vector3( -19.5000,  -1.0000,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -20.0359,  -1.0000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -21.5000,  -1.0000,  -2.5359 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -1.0000,  -2.0000 ));
	geometry.vertices.push(new THREE.Vector3( -25.5000,  -1.0000,  -2.5359 ));
	geometry.vertices.push(new THREE.Vector3( -26.9641,  -1.0000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -27.5000,  -3.0000,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -26.9641,  -3.0000,  -8.0000 ));
	geometry.vertices.push(new THREE.Vector3( -25.5000,  -3.0000,  -9.4641 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -3.0000, -10.0000 ));
	geometry.vertices.push(new THREE.Vector3( -21.5000,  -3.0000,  -9.4641 ));
	geometry.vertices.push(new THREE.Vector3( -20.0359,  -3.0000,  -8.0000 ));
	geometry.vertices.push(new THREE.Vector3( -19.5000,  -3.0000,  -6.0000 ));
	geometry.vertices.push(new THREE.Vector3( -20.0359,  -3.0000,  -4.0000 ));
	geometry.vertices.push(new THREE.Vector3( -21.5000,  -3.0000,  -2.5359 ));
	geometry.vertices.push(new THREE.Vector3( -23.5000,  -3.0000,  -2.0000 ));
	geometry.vertices.push(new THREE.Vector3( -25.5000,  -3.0000,  -2.5359 ));
	geometry.vertices.push(new THREE.Vector3( -26.9641,  -3.0000,  -4.0000 ));
	geometry.faces.push(new THREE.Face3(  24,   25,   36, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  46,   35,   24, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  49,   48,   59, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  52,   51,   59, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  55,   54,   59, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  58,   57,   59, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  36,   25,   37, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  25,   26,   37, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  34,   35,   45, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  35,   46,   45, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(   0,   13,   12, new THREE.Vector3( -0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(   0,    1,   13, new THREE.Vector3( -0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(   1,   14,   13, new THREE.Vector3( -0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(   1,    2,   14, new THREE.Vector3( -0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(   2,   15,   14, new THREE.Vector3( -0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(   2,    3,   15, new THREE.Vector3( -0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(   3,   16,   15, new THREE.Vector3( 0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(   3,    4,   16, new THREE.Vector3( 0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(   4,   17,   16, new THREE.Vector3( 0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(   4,    5,   17, new THREE.Vector3( 0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(   5,   18,   17, new THREE.Vector3( 0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(   5,    6,   18, new THREE.Vector3( 0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(   6,   19,   18, new THREE.Vector3( 0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(   6,    7,   19, new THREE.Vector3( 0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(   7,   20,   19, new THREE.Vector3( 0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(   7,    8,   20, new THREE.Vector3( 0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(   8,   21,   20, new THREE.Vector3( 0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(   8,    9,   21, new THREE.Vector3( 0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(   9,   22,   21, new THREE.Vector3( -0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(   9,   10,   22, new THREE.Vector3( -0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  10,   23,   22, new THREE.Vector3( -0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  10,   11,   23, new THREE.Vector3( -0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  11,   12,   23, new THREE.Vector3( -0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  11,    0,   12, new THREE.Vector3( -0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  86,   73,   74, new THREE.Vector3( -0.99, 0.00, -0.15 ).normalize()));
	geometry.faces.push(new THREE.Face3(  86,   85,   73, new THREE.Vector3( -0.99, 0.00, -0.15 ).normalize()));
	geometry.faces.push(new THREE.Face3(  87,   74,   75, new THREE.Vector3( -0.92, 0.00, -0.39 ).normalize()));
	geometry.faces.push(new THREE.Face3(  87,   86,   74, new THREE.Vector3( -0.92, 0.00, -0.39 ).normalize()));
	geometry.faces.push(new THREE.Face3(  88,   75,   76, new THREE.Vector3( -0.35, 0.00, -0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  88,   87,   75, new THREE.Vector3( -0.35, 0.00, -0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  89,   76,   77, new THREE.Vector3( 0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  89,   88,   76, new THREE.Vector3( 0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  90,   77,   78, new THREE.Vector3( 0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  90,   89,   77, new THREE.Vector3( 0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  91,   78,   79, new THREE.Vector3( 0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  91,   90,   78, new THREE.Vector3( 0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  92,   79,   80, new THREE.Vector3( 0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  92,   91,   79, new THREE.Vector3( 0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  93,   80,   81, new THREE.Vector3( 0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  93,   92,   80, new THREE.Vector3( 0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3(  94,   81,   82, new THREE.Vector3( 0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  94,   93,   81, new THREE.Vector3( 0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3(  95,   82,   83, new THREE.Vector3( -0.35, 0.00, 0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  95,   94,   82, new THREE.Vector3( -0.35, 0.00, 0.94 ).normalize()));
	geometry.faces.push(new THREE.Face3(  96,   83,   84, new THREE.Vector3( -0.92, 0.00, 0.39 ).normalize()));
	geometry.faces.push(new THREE.Face3(  96,   95,   83, new THREE.Vector3( -0.92, 0.00, 0.39 ).normalize()));
	geometry.faces.push(new THREE.Face3(  85,   84,   73, new THREE.Vector3( -0.99, 0.00, 0.15 ).normalize()));
	geometry.faces.push(new THREE.Face3(  85,   96,   84, new THREE.Vector3( -0.99, 0.00, 0.15 ).normalize()));
	geometry.faces.push(new THREE.Face3(  98,   85,   86, new THREE.Vector3( -0.93, -0.34, -0.14 ).normalize()));
	geometry.faces.push(new THREE.Face3(  98,   97,   85, new THREE.Vector3( -0.92, -0.38, -0.12 ).normalize()));
	geometry.faces.push(new THREE.Face3(  85,  108,   96, new THREE.Vector3( -0.93, -0.34, 0.14 ).normalize()));
	geometry.faces.push(new THREE.Face3(  85,   97,  108, new THREE.Vector3( -0.92, -0.38, 0.12 ).normalize()));
	geometry.faces.push(new THREE.Face3( 146,  133,  134, new THREE.Vector3( -0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3( 146,  145,  133, new THREE.Vector3( -0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3( 147,  134,  135, new THREE.Vector3( -0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3( 147,  146,  134, new THREE.Vector3( -0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3( 148,  135,  136, new THREE.Vector3( -0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3( 148,  147,  135, new THREE.Vector3( -0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3( 149,  136,  137, new THREE.Vector3( 0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3( 149,  148,  136, new THREE.Vector3( 0.26, 0.00, -0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3( 150,  137,  138, new THREE.Vector3( 0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3( 150,  149,  137, new THREE.Vector3( 0.71, 0.00, -0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3( 151,  138,  139, new THREE.Vector3( 0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3( 151,  150,  138, new THREE.Vector3( 0.97, 0.00, -0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3( 152,  139,  140, new THREE.Vector3( 0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3( 152,  151,  139, new THREE.Vector3( 0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3( 153,  140,  141, new THREE.Vector3( 0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3( 153,  152,  140, new THREE.Vector3( 0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3( 154,  141,  142, new THREE.Vector3( 0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3( 154,  153,  141, new THREE.Vector3( 0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3( 155,  142,  143, new THREE.Vector3( -0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3( 155,  154,  142, new THREE.Vector3( -0.26, 0.00, 0.97 ).normalize()));
	geometry.faces.push(new THREE.Face3( 156,  143,  144, new THREE.Vector3( -0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3( 156,  155,  143, new THREE.Vector3( -0.71, 0.00, 0.71 ).normalize()));
	geometry.faces.push(new THREE.Face3( 145,  144,  133, new THREE.Vector3( -0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3( 145,  156,  144, new THREE.Vector3( -0.97, 0.00, 0.26 ).normalize()));
	geometry.faces.push(new THREE.Face3(  48,   58,   59, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  48,   47,   58, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  49,   51,   50, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  49,   59,   51, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  52,   54,   53, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  52,   59,   54, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  55,   57,   56, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  55,   59,   57, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  28,   40,   39, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  28,   29,   40, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  31,   43,   42, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  31,   32,   43, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  87,   98,   86, new THREE.Vector3( -0.86, -0.34, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3(  87,   99,   98, new THREE.Vector3( -0.87, -0.32, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3(  88,   99,   87, new THREE.Vector3( -0.32, -0.40, -0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3(  88,  100,   99, new THREE.Vector3( -0.35, -0.36, -0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3( 101,   88,   89, new THREE.Vector3( 0.24, -0.37, -0.90 ).normalize()));
	geometry.faces.push(new THREE.Face3( 101,  100,   88, new THREE.Vector3( 0.24, -0.37, -0.90 ).normalize()));
	geometry.faces.push(new THREE.Face3( 102,   89,   90, new THREE.Vector3( 0.66, -0.37, -0.66 ).normalize()));
	geometry.faces.push(new THREE.Face3( 102,  101,   89, new THREE.Vector3( 0.66, -0.37, -0.66 ).normalize()));
	geometry.faces.push(new THREE.Face3( 103,   90,   91, new THREE.Vector3( 0.90, -0.37, -0.24 ).normalize()));
	geometry.faces.push(new THREE.Face3( 103,  102,   90, new THREE.Vector3( 0.90, -0.37, -0.24 ).normalize()));
	geometry.faces.push(new THREE.Face3( 104,   91,   92, new THREE.Vector3( 0.90, -0.37, 0.24 ).normalize()));
	geometry.faces.push(new THREE.Face3( 104,  103,   91, new THREE.Vector3( 0.90, -0.37, 0.24 ).normalize()));
	geometry.faces.push(new THREE.Face3( 105,   92,   93, new THREE.Vector3( 0.66, -0.37, 0.66 ).normalize()));
	geometry.faces.push(new THREE.Face3( 105,  104,   92, new THREE.Vector3( 0.66, -0.37, 0.66 ).normalize()));
	geometry.faces.push(new THREE.Face3( 106,   93,   94, new THREE.Vector3( 0.24, -0.37, 0.90 ).normalize()));
	geometry.faces.push(new THREE.Face3( 106,  105,   93, new THREE.Vector3( 0.24, -0.37, 0.90 ).normalize()));
	geometry.faces.push(new THREE.Face3( 107,   94,   95, new THREE.Vector3( -0.32, -0.40, 0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3( 107,  106,   94, new THREE.Vector3( -0.35, -0.36, 0.86 ).normalize()));
	geometry.faces.push(new THREE.Face3( 108,   95,   96, new THREE.Vector3( -0.86, -0.34, 0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3( 108,  107,   95, new THREE.Vector3( -0.87, -0.32, 0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3(  98,  109,   97, new THREE.Vector3( -0.38, -0.92, -0.05 ).normalize()));
	geometry.faces.push(new THREE.Face3(  98,  110,  109, new THREE.Vector3( -0.42, -0.90, -0.03 ).normalize()));
	geometry.faces.push(new THREE.Face3( 113,  100,  101, new THREE.Vector3( 0.10, -0.92, -0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3( 113,  112,  100, new THREE.Vector3( 0.10, -0.92, -0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3( 114,  101,  102, new THREE.Vector3( 0.28, -0.92, -0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3( 114,  113,  101, new THREE.Vector3( 0.28, -0.92, -0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3( 115,  102,  103, new THREE.Vector3( 0.38, -0.92, -0.10 ).normalize()));
	geometry.faces.push(new THREE.Face3( 115,  114,  102, new THREE.Vector3( 0.38, -0.92, -0.10 ).normalize()));
	geometry.faces.push(new THREE.Face3( 116,  103,  104, new THREE.Vector3( 0.38, -0.92, 0.10 ).normalize()));
	geometry.faces.push(new THREE.Face3( 116,  115,  103, new THREE.Vector3( 0.38, -0.92, 0.10 ).normalize()));
	geometry.faces.push(new THREE.Face3( 117,  104,  105, new THREE.Vector3( 0.28, -0.92, 0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3( 117,  116,  104, new THREE.Vector3( 0.28, -0.92, 0.28 ).normalize()));
	geometry.faces.push(new THREE.Face3( 118,  105,  106, new THREE.Vector3( 0.10, -0.92, 0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3( 118,  117,  105, new THREE.Vector3( 0.10, -0.92, 0.38 ).normalize()));
	geometry.faces.push(new THREE.Face3( 109,  108,   97, new THREE.Vector3( -0.38, -0.92, 0.05 ).normalize()));
	geometry.faces.push(new THREE.Face3( 109,  120,  108, new THREE.Vector3( -0.42, -0.90, 0.03 ).normalize()));
	geometry.faces.push(new THREE.Face3( 109,  122,  121, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 109,  110,  122, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 113,  126,  125, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 113,  114,  126, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 116,  129,  128, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 116,  117,  129, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 120,  121,  132, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 120,  109,  121, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  27,   39,   38, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  27,   28,   39, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  29,   41,   40, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  29,   30,   41, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  30,   42,   41, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  30,   31,   42, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  32,   44,   43, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  32,   33,   44, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  60,   62,   72, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  60,   61,   62, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  62,   64,   72, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  62,   63,   64, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  64,   66,   72, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  64,   65,   66, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  66,   68,   72, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  66,   67,   68, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  68,   70,   72, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  68,   69,   70, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  70,   60,   72, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  70,   71,   60, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 100,  111,   99, new THREE.Vector3( -0.14, -0.93, -0.34 ).normalize()));
	geometry.faces.push(new THREE.Face3( 100,  112,  111, new THREE.Vector3( -0.21, -0.90, -0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3( 119,  106,  107, new THREE.Vector3( -0.14, -0.93, 0.34 ).normalize()));
	geometry.faces.push(new THREE.Face3( 119,  118,  106, new THREE.Vector3( -0.21, -0.90, 0.37 ).normalize()));
	geometry.faces.push(new THREE.Face3( 112,  125,  124, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 112,  113,  125, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 114,  127,  126, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 114,  115,  127, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 115,  128,  127, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 115,  116,  128, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 117,  130,  129, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 117,  118,  130, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  26,   38,   37, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  26,   27,   38, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  33,   45,   44, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3(  33,   34,   45, new THREE.Vector3( 0.00, 1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 118,  131,  130, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 118,  119,  131, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 120,  107,  108, new THREE.Vector3( -0.39, -0.90, 0.17 ).normalize()));
	geometry.faces.push(new THREE.Face3( 120,  119,  107, new THREE.Vector3( -0.41, -0.89, 0.17 ).normalize()));
	geometry.faces.push(new THREE.Face3( 111,  124,  123, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 111,  112,  124, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 119,  132,  131, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 119,  120,  132, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 123,  110,  111, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 123,  122,  110, new THREE.Vector3( 0.00, -1.00, 0.00 ).normalize()));
	geometry.faces.push(new THREE.Face3( 110,   99,  111, new THREE.Vector3( -0.41, -0.89, -0.17 ).normalize()));
	geometry.faces.push(new THREE.Face3( 110,   98,   99, new THREE.Vector3( -0.39, -0.90, -0.17 ).normalize()));
	var material = new THREE.MeshLambertMaterial( {color:0x010101} );
	var mesh = new THREE.Mesh( geometry, material );
	var center = new THREE.Vector3( -21.500000, -3.300000, -6.000000 );
	return [mesh,center];
}
